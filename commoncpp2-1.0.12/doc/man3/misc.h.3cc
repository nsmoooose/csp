.TH "misc.h" 3 "22 May 2003" "CommonC++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
misc.h \- Memory management, configuration keydata objects and string tokenizer. 
.SH SYNOPSIS
.br
.PP
\fC#include <cc++/config.h>\fP
.br
\fC#include <cc++/thread.h>\fP
.br
\fC#include <fstream>\fP
.br
\fC#include <iostream>\fP
.br
.SS "Compounds"

.in +1c
.ti -1c
.RI "class \fBiterator\fP"
.br
.RI "\fIThe input forward iterator for tokens.\fP"
.ti -1c
.RI "struct \fBDefine\fP"
.br
.ti -1c
.RI "class \fBKeydata\fP"
.br
.RI "\fIKeydata objects are used to load and hold 'configuration' data for a given application. load text configuration files into keyword pairs.\fP"
.ti -1c
.RI "struct \fBKeyval\fP"
.br
.ti -1c
.RI "struct \fBKeysym\fP"
.br
.ti -1c
.RI "struct \fB_page\fP"
.br
.ti -1c
.RI "class \fBMemPager\fP"
.br
.RI "\fIThe memory pager is used to allocate cumulative memory pages for storing object specific 'persistant' data that is presumed to persist during the life of a given derived object. Accumulative object memory allocator.\fP"
.ti -1c
.RI "class \fBNoSuchElementException\fP"
.br
.RI "\fIException thrown, if someone tried to read beyond the end of the tokens.\fP"
.ti -1c
.RI "class \fBSharedMemPager\fP"
.br
.RI "\fIThe shared mempager uses a mutex to protect key access methods. mutex protected memory pager.\fP"
.ti -1c
.RI "class \fBStringTokenizer\fP"
.br
.RI "\fISplits delimited string into tokens.\fP"
.in -1c
.SS "Defines"

.in +1c
.ti -1c
.RI "#define \fBKEYDATA_INDEX_SIZE\fP   97"
.br
.ti -1c
.RI "#define \fBKEYDATA_PAGER_SIZE\fP   512"
.br
.ti -1c
.RI "#define \fBKEYDATA_PATH_SIZE\fP   256"
.br
.in -1c
.SH "DETAILED DESCRIPTION"
.PP 
Memory management, configuration keydata objects and string tokenizer.
.PP
.PP
.SH "DEFINE DOCUMENTATION"
.PP 
.SS "#define KEYDATA_INDEX_SIZE   97"
.PP
.SS "#define KEYDATA_PAGER_SIZE   512"
.PP
.SS "#define KEYDATA_PATH_SIZE   256"
.PP
.SH "AUTHOR"
.PP 
Generated automatically by Doxygen for CommonC++ from the source code.
