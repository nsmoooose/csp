#!/usr/bin/python

# CSP Theater Layout Tool - Copyright (C) 2003, 2005 Mark Rose
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, US

"""
CSP Theater Layout Tool
"""

import sys
import threading
import os.path

import cLayout
import UI

from CSP.base import app


class UIThread(threading.Thread):

	def __init__(self, view, xml_path, model_path):
		threading.Thread.__init__(self)
		self.setDaemon(1)
		self._view = view
		self._ui = UI.Init(view, xml_path, model_path)

	def run(self):
		print "Combat Simulator Project Theater Layout Tool"
		print "============================================"
		self._ui.MainLoop()
		self._view.quit()


def main(args):
	view = cLayout.View()
	# was sys.argv, now argument parsing handled in python.  at some point
	# we may want to declare options for some of the flags that the osg
	# ArgumentParser accepts and pass them explicitly (e.g. --stereo).
	argv = [app.programName()]
	if view.init(argv):
		sys.exit(1)

	ui = UIThread(view, app.options.xml, app.options.model)
	ui.start()
	view.run()

# find the root of the CSP workspace
base = os.path.dirname(os.path.dirname(app.__file__))
# default Data directory for CSPSim in the current workspace
data = os.path.join(base, 'CSPSim', 'Data')
# default XML data path
xml_path = os.path.join(data, 'XML')
# default 3D model path
model_path = os.path.join(data, 'Models')

app.addOption('--xml', default=xml_path, type='string', help='path to theater data')
app.addOption('--model', default=model_path, type='string', help='path to 3d models')
app.start()

