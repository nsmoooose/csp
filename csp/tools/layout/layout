#!/usr/bin/python

# CSP Theater Layout Tool - Copyright (C) 2003, 2005 Mark Rose
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, US

"""
CSP Theater Layout Tool
"""

import sys
import thread
import os.path

import csp
from csp import csplib
from csp.base import app
from csp.tools.layout import cLayout
from csp.tools.layout import UI

def run(view, ui):
	view.run()
	ui.ExitMainLoop()


def main(args):
	print "Combat Simulator Project Theater Layout Tool"
	print "============================================"
	
	options = app.options

	if options.pause:
		pauseForDebugger()
	
	view = cLayout.View()
	argv = [app.programName()] + list(args)
	if view.init(argv):
		sys.exit(1)

	ui = UI.Init(view, app.options.xml, app.options.model)
	thread.start_new_thread(run, (view, ui))
	ui.MainLoop()
	view.quit()

def pauseForDebugger():
	"""
	Print a help message for attaching gdb to this process and wait for keyboard
	input.  Should be called after the cspsim module has been loaded if requested.
	"""
	print
	print "All extension modules have been loaded and the simulation is now paused"
	print "to give you an opportunity to attach a debugging session.  Under GNU/Linux"
	print "run the following command from a separate shell to attach a debug session:"
	print
	print "   gdb python %d" % os.getpid()
	print
	print "This will run gdb and attach to the simulation process.  Once gdb finishes"
	print "loading symbols for all the modules, you can set breakpoints as needed"
	print "and then enter 'c' to continue."
	print
	print "Finally, return to this window and press <enter> to resume."
	print
	sys.stdin.readline()


# find the root of the CSP workspace
base = csp.dir  #os.path.dirname(os.path.dirname(app.__file__))
# default Data directory for CSPSim in the current workspace
data = os.path.join(base, 'data')
# default XML data path
xml_path = os.path.join(data, 'xml')
# default 3D model path
model_path = os.path.join(data, 'models')

app.addOption('--xml', default=xml_path, type='string', help='path to theater data')
app.addOption('--model', default=model_path, type='string', help='path to 3d models')
app.addOption('--pause', action='store_true', default=False, help='pause on startup for attaching a debugger')
app.start()
print 'end'
