.TH "DSO" 3 "22 May 2003" "CommonC++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DSO \- The DSO dynamic loader class is used to load object files. Dynamic class file loader. 
.SH SYNOPSIS
.br
.PP
\fC#include <file.h>\fP
.PP
Inherited by \fBPluginGroup\fP.
.PP
.SS "Public Methods"

.in +1c
.ti -1c
.RI "\fBDSO\fP (const char *filename)"
.br
.RI "\fIConstruct and load a DSO object file.\fP"
.ti -1c
.RI "\fBDSO\fP (const char *filename, bool resolve)"
.br
.ti -1c
.RI "char * \fBgetError\fP (void)"
.br
.RI "\fIRetrieve error indicator associated with DSO failure.\fP"
.ti -1c
.RI "void * \fBoperator[]\fP (const char *)"
.br
.RI "\fILookup a symbol in the loaded file.\fP"
.ti -1c
.RI "\fBCCXX_MEMBER_EXPORT\fP (bool) isValid(void)"
.br
.RI "\fISee if DSO object is valid.\fP"
.in -1c
.SS "Static Public Methods"

.in +1c
.ti -1c
.RI "void \fBdynunload\fP (void)"
.br
.in -1c
.SH "DETAILED DESCRIPTION"
.PP 
The DSO dynamic loader class is used to load object files. Dynamic class file loader.
.PP
On elf based systems this is typically done with dlopen. A dummy stub class is generated for non-dl capable systems.
.PP
\fBAuthor: \fP
.in +1c
David Sugar <dyfet@ostel.com> 
.PP
.SH "CONSTRUCTOR & DESTRUCTOR DOCUMENTATION"
.PP 
.SS "DSO::DSO (const char * filename)\fC [inline]\fP"
.PP
Construct and load a DSO object file.
.PP
\fBParameters: \fP
.in +1c
.TP
\fB\fIfilename\fP\fP
pathname of object file to load. 
.SS "DSO::DSO (const char * filename, bool resolve)\fC [inline]\fP"
.PP
.SH "MEMBER FUNCTION DOCUMENTATION"
.PP 
.SS "DSO::CCXX_MEMBER_EXPORT (bool)"
.PP
See if DSO object is valid.
.PP
\fBReturns: \fP
.in +1c
true if valid. 
.SS "void DSO::dynunload (void)\fC [inline, static]\fP"
.PP
.SS "char* DSO::getError (void)"
.PP
Retrieve error indicator associated with DSO failure.
.PP
This is often used in catch handlers. 
.SS "void* DSO::operator[] (const char *)\fC [inline]\fP"
.PP
Lookup a symbol in the loaded file.
.PP


.SH "AUTHOR"
.PP 
Generated automatically by Doxygen for CommonC++ from the source code.
