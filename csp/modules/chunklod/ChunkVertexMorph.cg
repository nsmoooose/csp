//
// ChunkVertexMorph
//

struct dataIn
{
	float4 pos : POSITION;				// vertex position, y delta in w
};


struct dataOut
{
	float4 pos : POSITION;
	float4 color : COLOR;
	float4 tex : TEXCOORD0;
};

dataOut main (dataIn IN,
			  uniform float3 scaleVal,		// sx, vertscale, sy
			  uniform float3 offsetVal)		// offx, (1 - morph_factor), offy
{
	dataOut OUT;

	IN.pos.xz = offsetVal.xz + IN.pos.xz * scaleVal.xz;
	IN.pos.y = (IN.pos.y + IN.pos.w * offsetVal.y) * scaleVal.y;
	IN.pos.w = 1.0f;			// reset to 1.0 before doing mul
	OUT.pos = mul (glstate.matrix.mvp, IN.pos);

	// compute the texture position for this, based on the
	// set texgen plane points.
	OUT.tex.x = dot(IN.pos, glstate.texgen[0].object.s);
	OUT.tex.y = dot(IN.pos, glstate.texgen[0].object.t);
	OUT.tex.zw = float2(1.0f,1.0f);
	OUT.tex = mul (glstate.matrix.texture[0], OUT.tex);

	OUT.color = float4(1.0f,1.0f,1.0f,1.0f);
	
	return OUT;
}
