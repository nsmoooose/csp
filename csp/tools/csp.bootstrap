# -*-python-*-
#
# Combat Simulator Project Workspace Setup Script
# Copyright (C) 2004 The Combat Simulator Project
# http://csp.sourceforge.net
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

"""
This is a bootstrap loader for the Combat Simulator Project.
It is intended to be placed into the Python path (typically
in site-packages).  When loaded, it replaces itself with the
csp package from the current workspace (if possible).
"""

import os
import sys

BOOTSTRAP_VERSION = 3

# prevent recursive imports if the real csp module isn't found.
if not sys.modules.get('csp_bootstrap'):

	# rename this module to 'csp_bootstrap' in sys.modules, making room for the real csp module.
	self = sys.modules['csp']
	del sys.modules['csp']
	sys.modules['csp_bootstrap'] = self

	# note that we use os.sep and normal string splitting/joining instead
	# of os.path.split/join since the latter behaves a bit strangely under
	# windows.  for example, os.path.split('c:\\csp') gives ['c:\\csp']
	# rather than ['c:', 'csp'].  actually, neither one is ideal ;-)

	# look for the root of the current workspace (first 'csp' directory
	# above cwd).
	cwd = os.getcwd()
	parts = cwd.split(os.sep)
	if not 'csp' in parts:
		raise ImportError, 'Trying to import csp from outside of a workspace (current working directory is "%s")' % cwd
	while parts[-1].lower() != 'csp':
		parts = parts[:-1]

	CSP_PATH = os.sep.join(parts[:-1])
	ROOT = os.sep.join([CSP_PATH, 'csp'])

	if not os.path.exists(os.sep.join([ROOT, '__init__.py'])):
		print 'Warning: %s does not contain __init__.py' % ROOT

	sys.path.insert(0, CSP_PATH)

	import csp
	if hasattr(csp, 'BOOTSTRAP_VERSION'):
		raise ImportError, 'Unable to bootstrap a csp module space from the current working directory.'

	csp.BOOTSTRAP_VERSION = BOOTSTRAP_VERSION

