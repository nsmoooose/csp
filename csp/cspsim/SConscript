# -*- python -*-
Import('env')

e = env.Clone()
e.AppendUnique(CPPDEFINES=Split('CSPSIM_EXPORTS __CSPSIM_EXE__'))

e.ParseConfig('pkg-config --cflags --libs freealut')
e.ParseConfig('pkg-config --cflags --libs python')
e.ParseConfig('pkg-config --cflags --libs openscenegraph')
# e.ParseConfig('pkg-config --cflags --libs openthreads')
e.ParseConfig('pkg-config --cflags --libs libccgnu2')
e.ParseConfig('pkg-config --cflags --libs sigc++-2.0')
e.ParseConfig('pkg-config --cflags --libs vorbisfile')
e.ParseConfig('pkg-config --cflags --libs sdl')
e.Append(LIBS = ['csplib', 'osgAL', 'openalpp', 'GL', 'cspwf'], LIBPATH=['#/csplib', '#/cspwf'])
e.CspTrc(['battlefield/BattlefieldMessages.cpp', 'battlefield/BattlefieldMessages.h'], 'battlefield/BattlefieldMessages.net')
e.CspTrc(['ObjectUpdate.cpp', 'ObjectUpdate.h'], 'ObjectUpdate.net')

cspsim = e.SharedLibrary('cspsim', [
    'battlefield/Battlefield.cpp',
    'battlefield/BattlefieldMessages.cpp',  # Generated from BattlefieldMessages.net
    'battlefield/SimObject.cpp',

    'Config.cpp',
    'config/Configuration.cpp',
    'config/Display.cpp',
    'config/UserInterface.cpp',

    'sky/Colorspace.cpp',
    'sky/Magnitude.cpp',
    'sky/OrbitalBody.cpp',
    'sky/OrbitalBodyImposter.cpp',
    'sky/OrbitalBodyModel.cpp',
    'sky/PhaseShader.cpp',
    'sky/Sky.cpp',
    'sky/SkyDome.cpp',
    'sky/SkyGroup.cpp',
    'sky/SkyShader.cpp',
    'sky/SolarSystem.cpp',
    'sky/StarDome.cpp',

    'ai/AircraftAgent.cpp',
    'ai/AircraftControl.cpp',
    'ai/AircraftMission.cpp',
    'ai/AircraftTask.cpp',
    'ai/DiveRecovery.cpp',
    'ai/LandingTask.cpp',
    'ai/TakeoffTask.cpp',
    'ai/StateMachine.cpp',
    'ai/Task.cpp',

    'AircraftEngine.cpp',
    'AircraftObject.cpp',
    'Animation.cpp',
    'AnimationSequence.cpp',
    'BaseDynamics.cpp',
    'BaseScreen.cpp',
    'Bus.cpp',
    'CarEngine.cpp',
    'CarObject.cpp',
    'CSPSim.cpp',
    'CSPViewer.cpp',
    'Channels.cpp',
    #	'ChunkLodTerrain.cpp',
    #	'ChunkLodTerrain.h',
    'CockpitInterface.cpp',
    'Collision.cpp',
    'Controller.cpp',
    'DamageModifier.cpp',
    'DataRecorder.cpp',
    'DoubleChannelMirror.cpp',
    'DynamicObject.cpp',
    'Engine.cpp',
    'Exception.cpp',
    'FlightControlSystem.cpp',
    'FlightDynamics.cpp',
    'FlightModel.cpp',
    'FuelManagementSystem.cpp',
    'GameScreen.cpp',
    'GearAnimation.cpp',
    'LandingGear.cpp',
    'LogoScreen.cpp',
    'MenuScreen.cpp',
    #		'Module.cpp',
    #		'Module.h',
    'ObjectModel.cpp',
    'ObjectUpdate.cpp',  # Generated from ObjectUpdate.net
    'PhysicsModel.cpp',
    'Projection.cpp',
    'RegisterObjectInterfaces.cpp',
    'ResourceBundle.cpp',
    'SceneModel.cpp',
    'ScreenInfo.cpp',
    'ScreenInfoNode.cpp',
    'ScreenInfoManager.cpp',
    'SDLViewer.cpp',
    'SDLEventHandler.cpp',
    'SDLGraphicsWindow.cpp',
    'Shader.cpp',
    'SimpleSceneManager.cpp',
    #'Sky.cpp',
    'SmokeEffects.cpp',
    'StabilityFlightModel.cpp',
    'Station.cpp',
    'System.cpp',
    'SystemsModel.cpp',
    'TankObject.cpp',
    'TerrainObject.cpp',
    'Theater.cpp',
    'ThrustData.cpp',
    'VirtualScene.cpp',

    'battlefield/LocalBattlefield.cpp',
    'battlefield/SceneManager.cpp',

    'f16/AlphaNumericDisplay.cpp',
    'f16/Constants.cpp',
    'f16/DataEntryDisplay.cpp',
    'f16/DataEntryPage.cpp',
    'f16/F16Channels.cpp',
    'f16/F16Engine.cpp',
    'f16/F16FlightModel.cpp',
    'f16/F16GearDynamics.cpp',
    'f16/F16HUD.cpp',
    'f16/F16INS.cpp',
    #	'f16/F16InputSystem.cpp',
    'f16/F16System.cpp',
    'f16/FLCS.cpp',
    'f16/FuelSystem.cpp',
    'f16/GroundAvoidanceAdvisory.cpp',
    'f16/JetFuelStarter.cpp',
    'f16/MasterModes.cpp',
    'f16/MultiFunctionDisplay.cpp',
    'f16/NavigationSystem.cpp',
    'f16/PageCNI.cpp',
    'f16/PageLIST.cpp',
    'f16/PanelHUD.cpp',
    'f16/Radio.cpp',
    'f16/RegisterF16Objects.cpp',
    'f16/SpecialFonts.cpp',
    'f16/StoresManagementPages.cpp',
    'f16/UpFrontControls.cpp',
    'f16/VoiceMessageUnit.cpp',

    'glDiagnostics.cpp',

    'hud/Display.cpp',
    'hud/DisplayTools.cpp',
    'hud/HUD.cpp',
    'hud/PitchLadder.cpp',
    'hud/Tape.cpp',
    'hud/Text.cpp',

    'input/EventMapIndex.cpp',
    'input/EventMapping.cpp',
    'input/HID.cpp',
    'input/InputInterface.cpp',
    'input/InputInterfaceWfAdapter.cpp',

    'sound/Loader.cpp',
    'sound/OggLoader.cpp',
    'sound/Sample.cpp',
    'sound/SoundEffect.cpp',
    'sound/SoundEngine.cpp',
    'sound/SoundModel.cpp',

    'stores/DragProfile.cpp',
    'stores/FuelTank.cpp',
    'stores/Hardpoint.cpp',
    'stores/Missile.cpp',
    'stores/Projectile.cpp',
    'stores/Rack.cpp',
    'stores/Stores.cpp',
    'stores/StoresDatabase.cpp',
    'stores/StoresDefinition.cpp',
    'stores/StoresManagementSystem.cpp',

    'systems/AircraftFlightSensors.cpp',
    'systems/AircraftInputSystem.cpp',
    'systems/AircraftSimpleFCS.cpp',

    'theater/CustomLayoutModel.cpp',
    'theater/ElevationCorrection.cpp',
    'theater/Feature.cpp',
    'theater/FeatureGroup.cpp',
    'theater/FeatureGroupList.cpp',
    'theater/FeatureGroupModel.cpp',
    'theater/FeatureLayout.cpp',
    'theater/FeatureModel.cpp',
    'theater/FeatureObjectModel.cpp',
    'theater/FeatureQuad.cpp',
    'theater/FeatureSceneModel.cpp',
    'theater/IsoContour.cpp',
    'theater/LayoutTransform.cpp',
    'theater/Objective.cpp',
    'theater/RandomBillboardModel.cpp',
    'theater/RandomForestModel.cpp',

    'views/CameraAgent.cpp',
    'views/CameraKinematics.cpp',
    'views/ExternalViews.cpp',
    'views/InternalView.cpp',
    'views/View.cpp',

    'weather/Atmosphere.cpp',

    'weather/clouds/CloudCoverModel.cpp',
    'weather/clouds/CloudModel.cpp',
    'weather/clouds/CloudTextureFactory.cpp',
])
e.Alias('cspsim', cspsim)

lib_env = env.Clone()
lib_env.ParseConfig('pkg-config --cflags --libs python')
lib_env.ParseConfig('pkg-config --cflags --libs openscenegraph')
lib_env.Append(LIBS = ['csplib', 'cspsim', 'cspwf'], LIBPATH=['#/csplib', '#/cspsim', '#/cspwf'])
cspsim_module = lib_env.SharedLibrary('_cspsim_module', ['cspsim.i'], SHLIBPREFIX='')
lib_env.Alias('cspsim_module', cspsim_module)
