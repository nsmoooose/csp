# -*-python-*-

EnsureSConsVersion(0,9)
EnsurePythonVersion(2,2)

import construct

env = Environment()

opt = construct.OptionSet()
set, add = opt.methods()
set.SWIG_MIN_VERSION = '1.3.16'
set.PYTHON_INC = construct.getPythonInc()
set.SUBDIRS = ()
add.CXXFLAGS = '-g -Wall -O2'
add.CPPFLAGS = ''
add.CPPPATH = ['#', set.PYTHON_INC]
add.SHLINKFLAGS = ' -Wl,-z,lazyload'
add.SHLINKLIBS = ['dl']
add.SWFLAGS = '-c -c++ -python -noexcept -I/usr/local/include'
set.LIBS=['osg', 'osgUtil', 'osgDB', 'osgProducer']
set.SWLIBS=['osg', 'osgUtil', 'osgDB', 'osgProducer', 'swigpy']
set.PACKAGE_PREFIX = construct.getPythonLib()
set.INCLUDE_PREFIX = construct.getPythonInc()
set.ARCHIVE_FORMATS = None
opt.apply(env)

options = Options('config.py', ARGUMENTS)
options.Add('CXX', 'C++ compiler')
options.Add('LINK', 'linker')
options.Add('ARCHIVE_FORMATS', 'File format(s) for distribution archives')
options.Add('PACKAGE_PREFIX', 'Installation path for the SimData package')
options.Add('INCLUDE_PREFIX', 'Installation path for the SimData headers and interfaces')
options.Update(env)
Help(options.GenerateHelpText(env))

construct.addSwigSupport(env)

conf = Configure(env)
construct.addConfigTests(conf)
if not conf.checkSwig(set.SWIG_MIN_VERSION):
	print
	print "   CSPLayout requires SWIG %s or newer.  If a compatible version" % set.SWIG_MIN_VERSION
	print "   of SWIG is already installed, check that is it in the default"
	print "   path.  SWIG can be downloaded from http://www.swig.org"
	print
	Exit(1)

Export('env', 'construct')

for subdir in set.SUBDIRS:
	SConscript(subdir+'/SConscript')


# -*-python-*-

import os.path

Import('env', 'construct')

sources = """
	View.cpp
	FeatureNodes.cpp
	PickHandler.cpp
	""".split()

# swig module

wrapper = env.SwigBuild(['CSPEdit_wrap.cpp', 'CSPEdit.py'], 'CSPEdit')
sources.append('CSPEdit_wrap.cpp')

# main application

app = env.Program("#/cspedit", sources)
lib = env.SharedLibrary("#/_CSPEdit", sources, SHLIBPREFIX = '', LIBS = env["SWLIBS"])

Default(lib, wrapper)

