 Version 0.4.0 (in progress)
===========================

2004-10-03: delta
  * Updated vcproj. Building CSPSimDLL now buils others libs (SimCore, 
    SpatialIndex) according to the build mode.
  
  * #include "Animation.h" and/or "ObjectModel.h" to numerous source files. 
    Need to investigate more to a safe approach to make it work with vs.
	
  * Removed #undef ERROR from System.h. 
  
  * Added #include "ObjectModel.h" & "Animation.h" to cCSP.i.
  
  * Minor others changes.
  
2004-10-02: onsight
  * Break more header interdependencies.  Hopefully doesn't also break
    the Windows build too badly!  Builds on Linux are about 30% faster.

2004-10-01: onsight
  * Clean up header includes slightly.  Use ScopedPointer for some of
    the member variables in class CSPSim.  Break several key header
    dependencies that were slowing down the build.  More work to be
    done.

2004-09-26: onsight
  * Fix a large number of small warnings when building CSPSim with
    g++ -W -Wall -pendantic.  The only remaining warning is produced
    by gnu-commoncpp.  Hopefully should have a positive impact on
    MSVC warnings as well, but you never know.

2004-09-25: onsight
  * Moved several source and header files to SimCore.  This code
    will be shared with other CSP applications, such as the index
    server.  Fixed a few bugs that crawled out when the headers
    were reordered.  Updated the scons scripts and makefiles
    accordingly.
===>WINDOWS USERS: SimCore needs a project file, and the CSPSim
    project needs tweaking.  If you need help with the changes
    you can catch me on icq or post on the forum.  Sorry for the
    disruption.

2004-09-24: onsight
  * Fix a few compiler warnings under gcc.

  * Add 'clean' target to tools makefiles.

  * Add a new build system for linux using scons.

  * Changed the Demeter header includes to use the prefix "Demeter/".
    This may require an update to the header search path in MSVS.

  * Changed the cCSP and SimData module import paths to use the new
    CSP.py bootstrap module.  You need to run setup.py first for this
    to work.

2004-09-18: delta
  * Updated VisualStudio/CSPSimDLL/CSPSimDLL.vcproj linking onto
    CSPSim/lib/SpatialIndex(d).lib.

  * A few changes in the header files to prevent some microsoft
    specific compiler conflicts which finally cleaned the code.

  * Fixed a few cast warnings in Projection.h.

  * Replaced the forward declaration of ObjectModel by a #include
    "ObjectModel.h" in Include/Theater/FeatureObjectModel.h.

2004-09-12: onsight
  * removed VirtualBattlefield.*

2004-09-12: onsight
  * Implemented a new Battlefield class to replace VirtualBattlefield.
    This class uses quadtree spatial indices instead of a fixed grid
    structure, and has a looser coupling to other components of CSP
    than the old battlefield.  This should make it easier to reuse
    for the index server.

  * Defined a SceneManager interface to decouple the battlefield from
    the scene graph.  Implemented the interface in SimpleSceneManager
    to provide basic addition and removal of objects from the scene
    graph.  In the future it would be good to implemented a more
    sophisticated scene manager subclass that constructs the scene
    graph elements of FeatureGroups in a separate thread, and handles
    feature transparency to smoothly hide features at the edge of
    the visible range.

  * Added a method to synchronous update to allow update targets to be
    manually disconnected from an update master.

  * Revised the SimObject interface, consolidating some pieces that
    had spread to DynamicObject and FeatureGroup.  SimObject is the
    only object class that the new battlefield needs to know about.

  * Minor tweaks to SimNet to reduce header dependencies.

  * Implemented a new view mode that places the camera in a fixed
    location 20 m behind the object and tracks the object motion
    from that point.  This was useful when testing object visibility
    updates with the new battlefield code, but may be removed when
    no longer needed/desired.

  * Changed the makefile paths such that TOPDIR now refers to CSP/.  Also
    added the SpatialIndex library (CSP/SpatialIndex/libspatialindex).

  * Fix .dep file dependencies, so that a .dep file will be regenerated
    whenever the corresponding object file is regenerated.  Previously
    .dep files were only regenerated when the corresponding source file
    changed, but this neglected important header file changes.  Linux
    developers should 'make clean-deps' (or just 'make clean') after this
    update to ensure that the dependency files are set up correctly.

==> Windows users:
     - build and link to the SpatialIndex library.
     - add Battlefield.cpp, SceneManager.cpp, and SimpleSceneManager.cpp to
       the build.
     - remove VirtualBattlefield.cpp from the build.

2004-09-11: onsight
  * Adjusted airbase position slightly to move it to a flat area.
    Moved the initial position of the test aircraft to compensate.
    (You'll need to recompile the dar file, otherwise the aircraft
    will be in the wrong place initially.)

2004-08-24: delta
  * Used simdata::clampTo instead of std::min/max to avoid the usual
    macro conflict on vs.

  * Avoid a minor warning with an implicit cats from double to float.

2004-08-08: onsight
  * Clamp throttle to [0,1] when using keyboard controls (was [-1,1]).

  * Tweaked animation channel binding to explicitly test type-
    compatibility before assigning.  Assigning incompatible Ref types
    now throws an exception (SimData).

  * Clean up default ini file a bit.

  * Move trees off of the runway.

2004-08-07: onsight
  * Cleaned up tree images a bit to remove purple pixels.  Converted
    tree0.rgba to png.  Adjusted the aspect ratios slightly.

  * Modified Makefile.in to generate object files under Source/.objs
    rather than alongside the source files.  Other small makefile
    cleanups.

  * Moved ObjectRangeInfo to old/ and removed it from the build (both
    Makefile and vcproj/dsp).

2004-08-06: onsight
  * Fixed a pseudo-bug in demeter, which caused terrain height anomalies
    at the edges of flat and rough terrain blocks.  Essentially, when a
    rough block left the fov and was culled, the triangle fans used to
    match that block to adjacent blocks at different detail levels would
    be removed, even though they were still within the field of view.
    The could cause the apparent terrain height to discontinuously change
    by tens of cm, even when the camera was close enough that the block
    was being rendered with maximum detail.

  * Cleaned up formatting, copyright notices, and logging in some of the
    network code.

  * Fixed camera panning limit calculation that keeps the camera above
    ground in external views.

  * Fixed a bug in the landing gear code that omitted lateral damping
    of tire oscillations when the wheels were rolling.  Also increased
    the tire damping coefficient.

  * Changed the tire rolling friction to a simdata::Real so that each
    wheel spins down at a slightly different rate.  In practice this
    isn't very noticible, since the wheels generally leave the ground
    at different times, so they will have different initial speeds.

  * Eliminated the nose-wheel castering routine.  It isn't necessary any
    more (high speed taxiing is stable), and made the front wheel appear
    to have a very low friction coefficient for lateral sliding at low
    speeds.

  * Increased the static friction coefficient of the tires (they were
    skidding too much / for too long).

  * Improved tire rotation logic: wheels roll backward and forward as
    appropriate, tire rotation continues when airborne, damped by
    friction and brakes.

  * Found the cause of mysterious "flips" of the aircraft on the ground.
    Turns out it isn't the landing gear physics: gusts of wind from behind
    the aircraft (20-30 m/s) are driving very poorly modelled parts of the
    "flight" envelope.  No attempt to fix this yet.

  * Update steering wheel angle in flight now.  Aircraft model can disable
    this "manually" if desired (e.g. NWS disengaged when no WOW) by setting
    the steering channel to zero.

  * Removed redundant contol of the aileron/elevators that was causing
    conflicts.  If these inputs and control surfaces need to be coordinated,
    then a more specialized FCS system should be written.

  * Adjusted the CM of the M2k forward by 30 cm to put more weight on the
    front wheel (reduce skidding when steering) and increase the takeoff
    pitchup speed.

  * Adjusted the vertical height of the M2k nosewheel (6.8 cm) to put it on
    the ground.  (Easier to see now that the camera can be panned down to
    ground level.)

  * Added an info line to show when ABS is active.

  * Reduced the gear damping coefficients slightly.  The front gear is now
    slightly underdamped, which agrees with an F-16 cockpit video I've seen.

  * Fixed a bug in the layout logic for RandomBillboardModel that could cause
    misplacement and bad elevation corrections.  Also minor cleanups of
    path handling and logging.

  * Minor tweaks to the m2k model to make the ambient lighting coefficients
    uniform across all parts (some where set to zero). Also increased the
    overall ambient lighting a bit.

  * Minor cleanup of the swig extensions to CSPSim for creating test objects.

2004-07-29: onsight
  * Removed a couple obsolete files from the Makefile, and added InputEvent.

  * Added missing std:: prefix in InputEvent.cpp.

  * Fixed a compiler warning in RandomBillboardModel.

  * Temporary hack to CSPSim/Tools/Terrain/*/Makefile to find SimData in
    relative path.  These build files are in poor shape.

  * Renamed Data/Models/Runway/RUNWAY.jpg to runway01.jpg.  The OSG model
    loader was tripping on case sensitivity.

  * Reordered the static constructor calls in ObjectModel.cpp.  There's an
    ugly bug in the way that Enum<> and Enumeration bind as far as static
    construction goes.  The Enumeration of an Enum<> must be created first,
    but this isn't guaranteed for static constructors (as in a class static
    Enumeration and the static ObjectInterface for importing Enum<> values
    from XML (which is a common case).  This "fix" may break under Windows
    (you'll see an assert in Enum.h if so).

  * Added Terrain link on my local client.  Right now we die when the
    terrain files aren't found without printing a helpful diagnostic
    message.  You can track down the cause in the logs (below level 5),
    but this isn't a great way to handle a common failure mode.

2004-07-29: delta
  * Added a filter_value member in ObjectModel's interface.

  * Changed the linear look-up of animations in ModelProcessor
    into a std::multimap look-up.

  * Changed the CullCallback from AnimationCallback into an 
    UpdateCallback to be threads safe w.r.t. the scenegraph.

  * Extended animation toolkit such that a node can be bound to
    2 different channels. This method might be extended to support
    a finite number of channels. Only handled in DrivenRotation yet
    but it should be straightforward to do the same for others
    animations.
    Added DrivenMagnitudeTranslation, DrivenVectorialTranslation
    and DrivenSwitch Animation classes.
    Change to SceneModel::bindAnimationChannels to handle others
    channels than DataChannel<double> only.

  * Removed old gear sprites from ObjectModel. Removed
    ObjectModel::m_Switch and related code.

  * Removed gear related code from AircraftObject.
    First attempt to tackle gear animation: a few simple and incomplete
    animations are provided. For this purpose, a GearAnimation
    simdata::Object class has been added (currently in LandingGear.h)
    using on bus' registration.

  * Added an Enum to ObjectModel's interface for an osgFX; currently
    only supports "None" and "SpecularHighlights" ;)

  * XML/vehicles/aircraft/m2k/model.xml has been patched to reflect
    a differential system on the Mirage 2000. The mirage 2000 model
    itself has been grantly improved by Lologramme. Furthermore, more
    animation hooks are now present. 
    Finally, Sony Tuckson improved the textures' set.

  * Reenabled smoke effects but that will need more work in the near 
    future.
  
  * Added Images/Smoke.
    
==> All users: rebuild sim.dar
  
2004-07-28: delta
  * Added an IsoContour class in RandomBillboardModel 
    describing the "boundary" of the region. Currently 
    supports circle and rectangle.
    
  * Added Images/Trees containing trees splat textures 
    and Images/Logo containing images for LogoScreen.
    Patched LogoScreen.cpp, Data/theater/balkan/airbase.xml
    and Data/theater/balkan/forest.xml to use this stuff.
    
==> All users: rebuild sim.dar

2004-07-27: delta
  * Added #undef ERROR in Log.h & System.h.
  
  * Moved AeroDynamics.cpp, base.cpp, main.cpp and trees.cpp 
    to Source/old.
    
  * Small cleanup in CameraAgent. Simplified CameraCommand.
  
  * Added a balkan dir under CSPSim/Data/XML/theater. 
    CSPSim/Data/XML/theater/balkan.xml should now refers to 
    files in this dir. A special area of the Balkan terrain 
    (balkanMapElev.7-7.bmp) has been flatten out to receive 
    an airbase (see note below).
    Changed the starting position of the m2k in createBalkan 
    from TestObjects.py.
    
  * Mapped the rudder to US_keyboard:COMMA (dec) and 
    US_keyboard:PERIOD (inc) in file 
    CSPSim/Tools/HID/Maps/aircraft-core.map.
    
  * Fixed a small bug(typo?) in the rudder decay.
  
  * Added limit min and max to AircraftSimpleFCS::Deflection for 
    elevators' and ailerons' deflection. 
    XML/vehicles/aircraft/m2k/systems.xml has been patched.
    
  * Changed various logo image file formats to jpg to save bandwith
    (LogoScreen).
  
  * Simplified derived classes of ScreenInfo. Slighty modified the
    position of texts.
  
  * A few changes in SmokeEffects.
  
  * Updated vs project. Many network source files are in the project 
    but excluded from the built.
  
  * Other minor changes.
  
==> All users: rebuild sim.dar and aircraft.hid.
               Copy balkanMapElev.7-7.bmp from CSPSim/Images
               to CSPSim/Terrain
==> Linux users: update the makefile (moved files to Source/old).

2004-07-17: onsight
  * Cleaned up indentation in some more network code.

2004-07-10: onsight
  * Small formatting cleanup in DynamicObject.cpp.

  * Refactored InputInterface to move the handler maps to a separate
    class (InputInterfaceDispatch).  A static instance of this class is
    then created in each InputInterface subclass.  This means that
    there will be one set of maps per InputInterface subclass (created
    once during static intialization), rather than one set per instance
    (recreated each time a new object was created).

    The input interface macros have changed somewhat as well.  The BIND_*
    macros that were in the object ctors are now used in the class
    declaration (c.f. AircraftObject.h).  There is also a macro that must
    be called in the .cpp file to define the static InputInterfaceDispatch
    instance (c.f. AircraftObject.cpp).  The macros used to define static
    and non-static handlers have been removed.  Instead just declare the
    handlers as normal methods in the class body, and implement them as
    usual in the source (.cpp) file.

2004-07-08: onsight
  * Slight tweak of the logging macros.  See the SimData changelog for
    details.

  * Added instructions for using the --pause option for debugging under
    GNU/Linux.

  * Changed the --log to --logcat, and added the ability to specify
    category exclusions.   For example, --logcat=PHYSICS:NETWORK:TERRAIN
    will only log messages in those three categories, while
    --logcat=ALL:-NETWORK will log all categories _except_ NETWORK.

  * Replaced the --slog parameter with --logpri, which overrides the
    logging priority for both simdata and cspsim.  Accepts either
    numeric values (e.g. 5) or symbolic names (e.g. "INFO").

2004-07-07: onsight
  * More network code reformatting and redirecting messages from stdout
    to the csp log.  Changed logging class to NETWORK.

  * Changed a few other cout's to use the csp log, and set the osg
    logging level to WARN (no easy way to redirect it).  stdout is
    fairly quiet now.

  * Fixed a compiler warning in Console.cpp

  * Fixed a few copyright notices

2004-07-06: onsight
  * Moved unreferenced headers and source files to old/ subdirectories.

  * Updated doxygen control file to exclude */old/*.

  * Fix cc++ includes in Makefile.in; add debug symbols to cCSP_wrap.o.

  * Add DispatchCenter.cpp to the build.

  * Reformatted some of the network code; fixed several gcc warnings.

  * Fix warnings in DispatchCenter.cpp.

  * Move some debug info from stdout to the log.

  * Move some debug/status info for landing gear from stdout to the onscreen
    display.  Also fix brake temperature updates to continue while airborne.

2004-07-01: delta
  * CameraKinematics now uses spherical coordinates terminology
    (theta,phi,radius).

  * Fixed a bug in view 3 when aircraft in the air: the camera could'nt
    move below the plane.

  * Changed exception(char*) by std::runtime_error(const string&) trying
    to fix a gcc syntax error.

  * Added a lighting bool attribute to disable lighting in ObjectModel.
   (lighting is on by default).

2004-06-29: delta
  * Corrected a shaking bug in the flyby view when PAUSE was enabled.
    (also could solve a possible bug in internal view).
    Added bool isInternal().

  * Changed various Vector3 ctors to simple set method (mostly in
    PhysicsModel and AircraftPhysicsModel classes).

  * Increased the number of iterations in AircraftPhysicsModel::doSimStep.

  * Various corrections related to m_PositionLocal.

  * Added a RECORD/REPLAY mode via a flag in CSPSim.ini.
    Position the flag to RECORD will record the current run, saving the
    events in a file (binary format). This file can be played back with
    REPLAY value. Standard run is obtained by PLAY keyword (default value).
==> Linux users: add InputEvent.cpp to the build.

  * Fixed a bug with the gear sprite at initialization.

  * Minor others changes.

  * Checking mods before situation gets worse due to an svn's problem ;)

2004-06-28: wolverine
  * Changed subdirectory name from Networking to SimNet. Also moved the
    Networking.h include file to a SimNet subdirectory.

2004-06-27: wolverine
  * Fixed a number of problems with the new callback handling code.

2004-06-27: onsight
  * Added DispatchCenter.h, and DispatchCenter.cpp.  Rough outline for
    adding tagged record support to the network layer.  Not yet integrated
    with the build, and relies a simdata header that isn't checked in yet.

2004-06-26: onsight
  * Fixed indentation.

  * Rearrange headers to suppress a warning in py_config.h.

  * Several fixups for changes in the SimData api related to logging and
    exceptions.

2004-06-20: onsight
  * Changed doxygen control file to recurse into the variou subdirectories
    (Systems, Theater, etc).

  * Changed some print statements to use logging instead.

  * Added a mainpage comment for the doxygen docs.

2004-06-14: onsight
  * Added doxygen directory, control file, and make targets.

  * Updated docs in Bus.h and inlined a few methods.

2004-06-13: onsight
  * Added many detailed comments to System.h, as well as a general overview.

2004-06-13: wolverine
  * Added DispatchMessageHandler to the networking layer to forward incoming
    messages to the correct object.

2004-06-12: wolverine
  * Added Dispatch.h as a possible way to dispatch network messages through
    object hierarchies.  Not integrated with the build yet.

2004-06-12: wolverine
  * Switching the writing of network buffers to use a SimData MemoryWriter.
    Switched the code that reads network buffers to use a SimData
    MemoryReader

2004-06-11: onsight
  * Removed most serialize() methods, since SimData now handles saving and
    loading of the public XML interface automatically.  Minor tweaks to
    Sky.cpp to serialize the stars (which don't use the standard XML
    facilities).

  * Added a relative path to SimData in the working copy to the Python path
    in CSPSim.py so that SimData will not be loaded from site-packages.  The
    idea is that CSPSim and SimData will be developed concurrently, and we
    don't want to have to go through a separate install process everytime
    something changes.  Changes to SimData that require simultaneous changes
    to CSPSim should be checked in as one submission.

  * Added an exception handler to CSPSim to suppress a stack trace when the
    data compiler fails.  The real trace is already logged, and this makes
    the error message more visible.

  * Changed the configure script under Linux to look for SimData in the
    working copy rather than site-packages.  Not quite working so currently
    disabled.  Also set the SimData include path to be local in the Makefile.

==> Windows devs: please change the project file to use the working copy
    of SimData rather than the version installed in site-packages.

  * Added GNU Common C++ check to the configure script, and include/libs
    to the Makefile templates.

2004-06-10: wolverine
  * Merged the networking classes MessageSocketDuplex into
    NetworkMessenger. Also added a callback mechanism to handle
    received messages.

2004-05-30: wolverine
  * Changed the router queue in NetworkMessagener to be a vector that
    contains a struct with a node and message pointers. This allows
    a destination node to be associated with each outgoing message. This
    approach hopefully avoids any object creation steps during the queueing
    and dequeing processes.

2004-05-28: wolverine
  * Created special data transfer structures that contain no virtual
    functions and have the same fundamental binary structure as SimData types
    minus the virutal function tables. These structures really just
    create memory place holders in the object network messages that
    the regular SimData types can be mem copied over, the elements of the
    transfer structures do not need to be directly accessed except
    for debugging purposes.

2004-05-23: wolverine
  * Changes to the format of the object update message. Now There
    is a special class for the object update payload section that
    contains fields for the payload data members. This should be
    uptained by casting the payload ptr to a ObjectUpdateMessagePayload
    pointer for both send and receive. Loading and Unloading can be
    performed with object assignments instead of memcpys to make
    the code a little clearer.

2004-05-16: wolverine
  * changes to networking include configuration from CSPSim.ini
    which includes ports, server node, option to disable/enable
    networking. Also removed a few extra printf statesments.
    Added NetworkMessage pooling/memory manage.

2004-05-15: wolverine
  * Changes to and cleanup to networking code.

2004-05-12: delta
  * Removed obsolete ComputeTransformCallback in Source/VirtualScene.cpp
    and replaced it by an osg::Transform (lunadog's post).

2004-05-09: delta
  * Minor cleanings in Include/CSPSim.h.

  * Commented out glFinish() in Source/VirtualScene.cpp which can be
    responsible of performance hits. Must be tested.

  * Decreased Radius of the skydome (Source/Sky.cpp) to provide a quick
    and dirty hack of the "black sky" symptom on ATI hardware.

  * Minor changes to VisualStudio/CSPSimDLL.vcproj.

  * Changed the date in Data/CSPSim.ini.

2004-05-08: Wolverine
  * More updates to networking. Including changes so both windows and unix
    can compile.

2004-05-02: wolverine
  * Updates to the networking to use commonc++, and export a python module.

2004-05-02: delta
  * Corrected a PYTHONPATH instead of PYTHON_PATH in the debug
    vs project file.

  * Minor others changes.

2004-04-25: delta
  * Added CSPSim/Data/Fonts.

  * Added Data/Models/Mirage2000/Glass.tga

  * Added Demeter & CSPChunkLod projects to CSPSim as dependencies.
    Building CSPSim now builds terrain lib dependencies.

  * Adjusted paths in CSPSim project.

  * Cleaned up VirtualScene.cpp.

2004-04-17: delta
  * Minor fixes to get the build going under windows.

2004-04-17: wolverine
  * Added initial networking functionality. This includes new files
    in the Source/Networking subdirectory and changes to some current
    file.

  * Made some changes in NetworkSocket.cpp to be more compatible with
    windows.

2004-04-17: delta
  * Changed COLOR to COLOR0 to enforce arbvp1 compatibility in
    nvMorph.cg.

  * Added a debug project file for heightfield_shader.

  * Removed osgProducer dependency on CSPSimDLL (not needed yet).

  * Commented out thread managing in LogoScreen.cpp.

  * Increased the number of local steps in
    void AircraftPhysicsModel::doSimStep(double dt).

2004-04-07: delta
  * Corrected a bug in the handling of mouse's scroll up/down.
    Added CameraCommands and extended CameraKinematics to achieve
    it.

  * Renamed CameraAgent::notifyToObjectToView to setObject.

  * Experimenting a smaller time step in physic model.

2004-04-04: onsight
  * Minor fixes to get the build going under linux.

2004-04-04: delta
  * Added views classes to help in GameScreen. These files are
    located under Views folders.
==========> Linux users: add CSPSim/Source/Views folder to the
    build.

2004-03-19: delta
  * Added a vectors' arithmetic implemented with expression
    template (mainly needed due to the poor performance of vs
    7.1's std::valarray<T>; recent version of g++'s std::valrray<T>
    is really fancy) in Vector.h; Vector class is protected behind
    a Vector namespace. By default, very few vector's arithmetic is
    used and the valarray alternative is only used on vs 7.1. Two
    macros parametrize its use: NOT_USE_VALARRAY (in Vector.h) and
    USE_VALARRAY_ARITHMETIC (in NumericalMethod.h).

  * The abstract class VectorField has moved in VectorField.h.

  * Reformated numerical code (NumericalMethod.*); added a new
    numerical method based on Cash Karp original article. Old
    methods are kept during tests.

  * Changed PYTHONPATH environment variable to PYTHON_PATH and
    SWIGPATH to SWIG_PATH to avoid possible names conflict with
    predefined environment variables (that does only affect vs
    project file).

  * Changed 0x1 value osg node mask to the safer 0xffffffff value.

  * Other minor changes.

2004-01-31: onsight
  * Patched acinclude.m4, configure.in, and Source/Makefile.in to
    handle SWIG 1.3.20 and newer.  When used with a newer version
    of SWIG, the '-c' flag is replace with '-noruntime', and the
    swigpy library is not linked against.  You may need to rebuild
    SimData (which has undergone a similar change).

  * Now tests for and links against the osgFX library.

2004-01-27: delta
  * Added a method to access viewport dimensions in VirtualScene.

  * Added a print screen command in GameScreen class to take
    a snapshot of the main window (feature requested by MrIch).
    Command is mapped to 'o' key. The image is currently saved
    (by default) as a bmp file in APPLICATIONS/CSPSim/Bin; the
    filename format is: CSPScreenmmddyy-hhmmss.bmp
==========> All users, update
    APPLICATIONS/CSPSim/Tools/HID/Maps/gamescreen-core.map, rebuild
    gamescreen.hid and RebuilData(.py).

2004-02-24: delta
  * Fixed a bug in ScreenInfoManager causing an incomplete texts
    display when changing vehicule.

  * Renamed std::string SnapImageDrawCallback:builSuffix() to
    getDate() in GameScreen.cpp.

  * Changed implementation in views 1 & 2. Added a safer control
    of the cam position when on ground.

  * Other minor changes.

2004-01-23: delta (suggested by Wolverine69)
  * Changed <python.h> to <Python.h> in
    APPLICATIONS/CSPSim/Source/CSPSim.cpp.

2003-12-30: delta
  * Added methods in VirtualScene to access projection/mv matrix.

2003-12-29: delta
  * More investigations on MARKERS_TOGGLE lead to
    m_Actions[id.c_str()] from the method onCommand in
    InputInterface and to the hash string simdata functions.
    A string with size > 13 may lead to unexpected behaviour.
    Not fixed yet.

  * Updated CSPSimDLL.vcproj to be able to debug it. Use debug
    built (export symbols are enabled).

2003-12-22: delta
  * Reimplemented LogoScreen a la osg. A sequence of screens is
    now loaded.
==========> All users, update APPLICATIONS/CSPSim/Data/Images.

  * MARKERS_TOGGLE string behaves weirdly with vc++. For now,
    it is changed to MARKS_TOGGLE but it will need a complete
    fix (problem might be similar for strings longer than N
    characters).
==========> All users, update
    APPLICATIONS/CSPSim/Tools/HID/Maps/aircraft-core.map, rebuild
    aircraft.hid and RebuilData(.py).

2003-12-21: delta
  * Fixed stars at daytime on windows (GL_BLEND problem).

  * Separated gears and markers control.

  * Added an osgFX effect (specular highlight). May produce
    a warning on old generation graphic card.
==========> Linux users, link onto osgFX lib.

  * Reenabled texture unit 1 code in ScreenInfo.cpp.

  * Other minor changes.

2003-10-24: onsight
  * Added some SimData header includes that were included
    implicitly before via SimData/TypeAdapter.h.

2003-10-23: onsight
  * Changed XML path to come under CachePath in CSPSim.py
    (submitted by VI).

  * Fixed errant data path in CSPSim.ini.

2003-10-21: onsight
  * Cleaned up the code that initializes the test sound.  The
    sim won't abort if it can't find the sound file or open
    an audio device, but a warning is written to the log.

  * Added a modified version of Lologramme's Mirage 2000
    model and textures to CVS.  This version includes special
    hooks for CSP animations.  The model and textures are
    under Data/Models/Mirage2000, and the including COPYING
    file lists copyright information.  The m2k/model.xml file
    now points to this 3D model.

  * Changed the CHANGES.current format to be clearer and more
    space-efficient.

2003-10-19: onsight
  * Updated configure script to check for osg 0.9.6.  Version
    0.9.4 can still be used, if necessary.  To do so, change
    configure.in to check for 0.9.4, run autoconf, then
    ./configure.  Finally, edit Include/CSPSim.h and uncomment
    the #define CSP_OSG_094 line.

2003-10-19: onsight
  * Updated the xml files to remove the 'static' attribute (now
    set in the class definition), and convert the engine thrust
    tables to use simdata::Table2.  Added systems.xml to
    vehicles/aircraft/m2k.

2003-10-19: onsight
  * Tagged r0_3_5 and started branch b0_3.  Merged 'systems'
    branch into the trunk to start version 0.4.0.

2003-10-19: onsight
  * Modified class Thrust to use simdata::Table2 instead of the
    deprecated simdata::Table class.  Note that the XML thrust
    tables must be modified to use this new class, but that these
    changes will not be checked into cvs (to prevent clashes with
    the trunk).  The corrected files will be posted at
    http://csp.sourceforge.net/downloads (soon) until the systems
    branch is merged to make v0.4.0.

  * SIMDATA_OBJECT(...) changed to SIMDATA_STATIC_OBJECT(...) for
    object classes that are static.  This was previously specified
    per object in the associated xml file using the 'static' attr.
    That use is deprecated in simdata 0.4; now object classes are
    either static or not.

2003-10-14: onsight
  * Removed very old TerrainSymbol.h

2003-10-11: onsight
  * Tracked down '#define min' from windows.h (no surprise), which
    was included via Producer/RenderSurface.  Added #undef's there
    as a temporary fix.

  * Changed the classes related to input events and hid mapping
    to use reference counting.

  * Moved CSP_OSG_094 to CSPSim.h.  You must uncomment this line
    to use OSG version 0.9.4 or older.

==========> VC users add System.cpp, SystemsModel.cpp, and Systems/*.cpp
    to the project.

2003-10-09: onsight
  * Fixed minor snprintf problem under msvc.

  * Split the SystemsModel class out of System.h/cpp into
    SystemsModel.h/cpp.  This seems to be a better arrangement,
    and hopefully circumventns a problem with forward
    declarations + simdata::Link<> under msvc.

2003-10-05: onsight
  * Changed HID to inherit from simdata::Referenced.  Minor
    changes to BaseScreen, GameScreen, and CSPSim to support
    this change.

2003-09-25: onsight
  * Integrated VI's patches for OSG 096 support.  Changes
    camera handling in near/far SceneView intances in
    VirtualScene.cpp.

  * Various OSG 096 fixes:
      + SceneView aspect ratio
      + NearView projection matrix
      + False horizon coloring
      + Skydome (non-TEXDOME) coloring

  * To use OSG 094, uncomment the #define CSP_OSG_094 line
    in VirtualScene.cpp

2003-09-17: onsight
  * Major refactoring of the aircraft components in terms of
    the System/SystemsModel architecture.  PhysicsModel is now
    a System under the main SystemsModel for the vehicle.  The
    BaseDynamics classes are also Systems, although they only
    function as dynamics when placed directly underneath the
    PhysicsModel node.  Almost all of the original inter-
    component communications are now implemented through the
    bus architecture.  A few hacks remain, such as the landing
    gear sprites (which needs to be overhauled in terms of
    standard animations once a suitable 3d model is available).

  * Significant changes to the DataRecorder interface.

  * Changed the stats display interface to allow each System
    to add its own info lines to the display by extending
    getInfo().

  * Changes to the XML data for the m2k to support the new
    vehicle interfaces.

2003-09-15: onsight
  * Added SynchronousUpdate.h and SynchronousUpdate.cpp as the
    basis for a new update callback infrastructure.

2003-09-13: onsight
  * Renamed Model to SystemsModel

  * Removed F16Model from the build.

  * Added m_SystemsModel to DynamicObject to reference the
    current systems model.  The setHuman() and setLocal()
    methods now handle updates of the model, using two new
    simdata::Path member variables: m_AgentModel and m_HumanModel.

  * SystemModel updates are now hooked into DynamicObject updates.

  * Input events are chained to the systems model if the dynamic
    object doesn't handle them.

  * Changed the mapped input event interface.  The onCommand,
    onAxis, and onMotion methods of InputInterface are now
    private, and all mapped events are passed via the onMapEvent
    method.  Overriding these methods was generally used to pass
    events to subobjects, so it is easier now that only one method
    needs to be extended.  The raw event handlers were excluded
    from this interface, since raw events are more often handled
    by top-level objects.  MapEvent is a wrapper type that
    encompasses the three original types of events.

2003-09-07: onsight
  * Added Include/System.h and Include/Bus.h, which provide
    infrastructure for constructing detailed vehicle models.
    Several existing components such as the data recorder and
    flight model need to be refactored to use this new
    interface.

  * Minor warning cleanups in System.h and Bus.h.

2003-08-20: onsight
  * Tagged version r0_3_4, starting version 0.3.5
