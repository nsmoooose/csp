TOPDIR = ..

BIN = $(TOPDIR)/Bin

SUBDIRS = Theater Networking Views 

DEMETER_PREFIX = $(TOPDIR)/$(DEMETER_RELATIVE)
DEMETER_INCLUDE = -I$(DEMETER_PREFIX)
DEMETER_LIBRARY = -L$(DEMETER_PREFIX) -ldemeter_csp 

CHUNKLOD_PREFIX = $(TOPDIR)/$(CHUNKLOD_RELATIVE)
CHUNKLOD_LIBRARY = -L$(CHUNKLOD_PREFIX)/lib -losgChunkLod_csp
CHUNKLOD_INCLUDE = -I$(CHUNKLOD_PREFIX)/include

LIBS = $(DEMETER_LIBRARY) $(CHUNKLOD_LIBRARY)

INCLUDE = -I$(TOPDIR)/Include $(DEMETER_INCLUDE) $(CHUNKLOD_INCLUDE) -I@PYTHON_INCLUDE@ 

BASEFL = $(GDEBUGF) $(GCFLAGS) $(INCLUDE) @SDL_FLAGS@ @SIGC_FLAGS@ #@CCGNU2_FLAGS@
CFLAGS = $(filter-out -I/usr/local/include, $(BASEFL))
SWCXXF = $(GCFLAGS) $(INCLUDE) @SIGC_FLAGS@
LDOPTS = -Wl,-z,lazyload $(GLDOPTS) @LIBS@
SWOPTS = $(GSWOPTS) $(INCLUDE) 

SOURCES = \
	Systems/AircraftFlightSensors.cpp \
	Systems/AircraftInputSystem.cpp \
	Systems/AircraftSimpleFCS.cpp \
	AircraftObject.cpp \
	AircraftPhysicsModel.cpp \
	Animation.cpp \
	Atmosphere.cpp \
	base.cpp \
	BaseDynamics.cpp \
	BaseScreen.cpp \
	ChunkLodTerrain.cpp \
	Collision.cpp \
	Colorspace.cpp \
	Config.cpp \
	Console.cpp \
	ConsoleCommands.cpp \
	CSPSim.cpp \
	DemeterTerrain.cpp \
	DynamicObject.cpp \
	DynamicalSystem.cpp \
	Engine.cpp \
	EventMapIndex.cpp \
	EventMapping.cpp \
	Exception.cpp \
	FlightDynamics.cpp \
	FlightModel.cpp \
	GameScreen.cpp \
	HID.cpp \
	InputInterface.cpp \
	KineticsChannels.cpp \
	LandingGear.cpp \
	LogoScreen.cpp \
	MenuScreen.cpp \
 	Message.cpp \
	Networking/NetworkNode.cpp \
	Networking/NetworkMessage.cpp \
	Networking/ObjectUpdateMessage.cpp \
	Networking/NetworkMessenger.cpp \
	Networking/NetworkBroadcaster.cpp \
	Networking/NetworkListener.cpp \
	Networking/NetworkSocket.cpp \
	NumericalMethod.cpp \
	ObjectModel.cpp \
	ObjectRangeInfo.cpp \
	PhysicsModel.cpp \
	ScreenInfo.cpp \
	ScreenInfoManager.cpp \
	SimObject.cpp \
	SimpleConfig.cpp \
	Sky.cpp \
	SmokeEffects.cpp \
	SynchronousUpdate.cpp \
	System.cpp \
	SystemsModel.cpp \
	TankObject.cpp \
	TerrainObject.cpp \
	Theater.cpp \
	Theater/CustomLayoutModel.cpp \
	Theater/ElevationCorrection.cpp \
	Theater/Feature.cpp \
	Theater/FeatureGroup.cpp \
	Theater/FeatureGroupList.cpp \
	Theater/FeatureLayout.cpp \
	Theater/FeatureObjectModel.cpp \
	Theater/FeatureQuad.cpp \
	Theater/FeatureSceneModel.cpp \
	Theater/LayoutTransform.cpp \
	Theater/Objective.cpp \
	Theater/RandomBillboardModel.cpp \
	Theater/RandomForestModel.cpp \
	Tools.cpp \
	trees.cpp \
	Views/CameraAgent.cpp \
	Views/CameraKinematics.cpp \
	Views/View.cpp \
	VirtualBattlefield.cpp \
	VirtualScene.cpp

OBJECTS = $(SOURCES:%.cpp=%.o) 

DEPDIR = .deps
MKDEP = $(CXX) -M $(CFLAGS)
SWDEP = $(SWIG) -M $(SWOPTS)
DEPFILES = $(addprefix $(DEPDIR)/,$(addsuffix .d, $(SOURCES))) $(DEPDIR)/cCSP.i.swigdep
DEPFILTER = 
DEPS_MAGIC := $(shell mkdir $(DEPDIR) $(DEPDIR)/Theater $(DEPDIR)/Systems $(DEPDIR)/Networking $(DEPDIR)/Views > /dev/null 2>&1 || :)

.PHONY: clean-deps clean all default

default:
	@echo "run make from top-level directory only"
	
clean-objects:
	rm -f $(SOURCES:%.cpp=%.o)
	rm -f lib*.a
	rm -f $(BIN)/_cCSP.so $(BIN)/cCSP.py cCSP_wrap.*
	rm -f $(DEPDIR)/*.d

clean-dependencies:
	@echo $(RM) -r $(RMFLAGS) $(DEPDIR)

clean-deps: clean-dependencies

clean: clean-deps clean-objects

ifeq ($(findstring clean,$(MAKECMDGOALS)),)
ifneq ($(strip $(DEPFILES)),)
-include $(DEPFILES)
endif
endif

#clean clean-deps:
#	for dir in $(SUBDIRS); do \
#		$(MAKE) -C $${dir} $@; \
#	done
	
build-subdirs:
#	@for dir in $(SUBDIRS); do \
#		$(MAKE) -C $${dir} all; \
#	done

$(DEPDIR)/%.d : %
	@echo "Computing dependencies for $<..."
	@$(MKDEP) $< $(DEPFILTER) | sed -e 's!^[a-zA-Z0-9_]*.o:!$(<:%.cpp=%.o):!' > $@
	
$(DEPDIR)/%.swigdep : %
	@echo "Computing dependencies for $<..."
	@$(SWDEP) $(DEPFILTER) -o $(<:.i=_wrap.cpp) $< > $@

_cCSP.so: $(OBJECTS) cCSP_wrap.o
	$(CXX) $(LDOPTS) -o$(BIN)/$@ $^ $(LIBS)
	
#CSPapp: $(OBJECTS) main.o
#	$(CXX) -lswigpy -lpython2.2 -o$@ $^ $(LIBS)

cCSP_wrap.cpp: cCSP.i
	$(SWIG) $(SWOPTS) -o $@ $< 
	mv cCSP.py $(BIN)

cCSP_wrap.o: cCSP_wrap.cpp
	$(CXX) -c $(SWCXXF) $(@:.o=.cpp)

%.o: %.cpp 
	$(CXX) -c $(CFLAGS) -o $@ $(@:.o=.cpp)

AeroDynamics.o: AeroDynamics.cpp 
	$(CXX) -c $(CFLAGS) -O3 $(@:.o=.cpp)
	
Makefile: Makefile.in
	cd $(TOPDIR) && ./configure

all: Makefile build-subdirs _cCSP.so #CSPapp

