# Process this file with autoconf to produce a configure script.
AC_INIT(Source/dummy.c)
AM_INIT_AUTOMAKE(Framework, 1.2)
dnl this doesn't work with current version of autoconfig AC_CONFIG_SRCDIR([Source/dummy.c])

SDL_VERSION=1.2.0
CXXFLAGS="$CXXFLAGS -g -O0"
CFLAGS="$CFLAGS -g -O0"

# Checks for programs.
AC_PROG_CC
AC_PROG_CPP
AC_PROG_CXX
AC_PROG_AWK
AM_PROG_LIBTOOL
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_MAKE_SET
AC_PROG_RANLIB



dnl Standard warnings.
WARNINGS="-Wall -Wpointer-arith -Wmissing-prototypes -Wmissing-declarations -Wcast-align -Wwrite-strings"

CPPFLAGS="$CPPFLAGS -I\$(top_srcdir)/Include -DOGL -D__LINUX__"

CXXFLAGS="$CXXFLAGS $WARNINGS"

# Checks for libraries.

# Checks for header files.
AC_CHECK_HEADERS([memory.h netinet/in.h stdlib.h string.h sys/socket.h sys/time.h unistd.h])

# look for openal headers
AC_CHECK_HEADERS([AL/al.h AL/alc.h AL/alut.h AL/altypes.h])

AC_CHECK_FUNCS([select])

# Checks for typedefs, structures, and compiler characteristics.
AC_C_CONST
AC_HEADER_TIME

dnl Figure out which math library to use
case "$target" in
    *-*-cygwin* | *-*-mingw32*)
        MATHLIB=""
        SYS_GL_LIBS="-lopengl32"
        ;;
    *-*-beos*)
        MATHLIB=""
        SYS_GL_LIBS="-lGL"
        ;;
    *-*-darwin*)
        MATHLIB=""
        SYS_GL_LIBS=""
        ;;
    *-*-aix*)
        if test x$ac_cv_prog_gcc = xyes; then
            CFLAGS="-mthreads"
	fi
        SYS_GL_LIBS=""
        ;;
    *)
        MATHLIB="-lm"
        AC_PATH_X
        AC_PATH_XTRA
        if test x$have_x = xyes; then
            CFLAGS="$CFLAGS $X_CFLAGS"
            SYS_GL_LIBS="$X_LIBS -lGL"
        else
            SYS_GL_LIBS="-lGL"
        fi
        ;;
esac
AC_SUBST(MATHLIB)

dnl Check for SDL

AM_PATH_SDL($SDL_VERSION,
            :,
	    AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
)
CXXFLAGS="$CXXFLAGS $SDL_CFLAGS"
##LIBS="-L/usr/lib $LIBS $SDL_LIBS"

dnl Check for OpenGL
AC_MSG_CHECKING(for OpenGL support)
have_opengl=no
AC_TRY_COMPILE([
 #if defined(__APPLE__) && defined(__MACH__)
 #include <OpenGL/gl.h>
 #else
 #include <GL/gl.h>
 #endif
],[
],[
have_opengl=yes
])
AC_MSG_RESULT($have_opengl)
if test x$have_opengl = xyes; then
    CXXFLAGS="$CXXFLAGS -DHAVE_OPENGL"
    GL_LIBS="$SYS_GL_LIBS"
else
    GL_LIBS=""
fi
AC_SUBST(GL_LIBS)

# Checks for library functions.
#AC_CHECK_FUNCS([select])
#AC_CHECK_LIB(GL, glEnable)
#AC_CHECK_LIB(GLU, gluScaleImage)
#AC_CHECK_LIB(SDL, SDL_PollEvent)

#look for OpenAL libs
AC_CHECK_LIB(openal,  alListenerf)

###GL_LIBS="$GL_LIBS -lGL -lGLU"
#GL_LIBS="$GL_LIBS /usr/lib/libGL.so /usr/lib/libGLcore.so"
#LDFLAGS="$LDFLAGS -L/usr/local/lib -L/usr/lib"

#SDL_LIBS="$SDL_LIBS -lSDL"

Xsed="sed -e s/^X//"
LTLIBOBJS=`echo X"$LIBOBJS" | \
    $Xsed -e "s,\.[^.]* ,.lo ,g;s,\.[^.]*\$,.lo,"`

AC_SUBST(LIBTOOL_DEPS)
AC_SUBST(LTLIBOBJS)
AC_SUBST(CXXFLAGS)
AC_SUBST(GL_LIBS)
AC_SUBST(SDL_LIBS)
AC_SUBST(LDFLAGS)
AC_SUBST(CPPFLAGS)



AC_MSG_RESULT([GL_LIBS = $GL_LIBS])
AC_MSG_RESULT([SYS_GL_LIBS = $SYS_GL_LIBS])
AC_MSG_RESULT([CXXFLAGS = $CXXFLAGS])
AC_MSG_RESULT([CPPFLAGS = $CPPFLAGS])
AC_MSG_RESULT([CFLAGS = $CFLAGS])
AC_MSG_RESULT([SDL_LIBS = $SDL_LIBS])
AC_MSG_RESULT([LIBS = $LIBS])
AC_MSG_RESULT([LDFLAGS = $LDFLAGS])
AC_MSG_RESULT([MAKE = $MAKE])
AC_MSG_RESULT([LINK = $LINK])



AC_OUTPUT([Makefile 
          Source/Makefile
          Source/Input/Makefile
          Source/Input/SDL/Makefile 
          Source/Shared/Makefile  
          Source/Factory/Makefile
          Source/Factory/Linux/Makefile
          Source/Framework/Makefile
          Source/Framework/Linux/Makefile
          Source/Graphics/Makefile
          Source/Graphics/OpenGL/Makefile
          Source/Graphics/OpenGL/SDL/Makefile
          Source/Network/Makefile
          Source/Network/Linux/Makefile
          Source/Math/Makefile
          Source/Audio/Makefile
          Source/Audio/Linux/Makefile
          Source/Window/Makefile          
          Source/Window/SDL/Makefile
          Source/File/Makefile
          Source/File/Linux/Makefile
	     ])
