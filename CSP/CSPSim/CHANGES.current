 Version 0.4.0 (in progress)
===========================

2004-07-06: onsight
  * Moved unreferenced headers and source files to old/ subdirectories.

  * Updated doxygen control file to exclude */old/*.

  * Fix cc++ includes in Makefile.in; add debug symbols to cCSP_wrap.o.

  * Add DispatchCenter.cpp to the build.

  * Reformatted some of the network code; fixed several gcc warnings.

  * Fix warnings in DispatchCenter.cpp.

2004-07-01: delta
  * CameraKinematics now uses spherical coordinates terminology
    (theta,phi,radius).

  * Fixed a bug in view 3 when aircraft in the air: the camera could'nt
    move below the plane.

  * Changed exception(char*) by std::runtime_error(const string&) trying
    to fix a gcc syntax error.

  * Added a lighting bool attribute to disable lighting in ObjectModel.
   (lightint is on by default).

2004-06-29: delta
  * Corrected a shaking bug in the flyby view when PAUSE was enabled.
    (also could solve a possible bug in internal view).
    Added bool isInternal().

  * Changed various Vector3 ctors to simple set method (mostly in
    PhysicsModel and AircraftPhysicsModel classes).

  * Increased the number of iterations in AircraftPhysicsModel::doSimStep.

  * Various corrections related to m_PositionLocal.

  * Added a RECORD/REPLAY mode via a flag in CSPSim.ini.
    Position the flag to RECORD will record the current run, saving the
    events in a file (binary format). This file can be played back with
    REPLAY value. Standard run is obtained by PLAY keyword (default value).
==> Linux users: add InputEvent.cpp to the build.

  * Fixed a bug with the gear sprite at initialization.

  * Minor others changes.

  * Checking mods before situation gets worse due to an svn's problem ;)

2004-06-28: wolverine
  * Changed subdirectory name from Networking to SimNet. Also moved the
    Networking.h include file to a SimNet subdirectory.

2004-06-27: wolverine
  * Fixed a number of problems with the new callback handling code.

2004-06-27: onsight
  * Added DispatchCenter.h, and DispatchCenter.cpp.  Rough outline for
    adding tagged record support to the network layer.  Not yet integrated
    with the build, and relies a simdata header that isn't checked in yet.

2004-06-26: onsight
  * Fixed indentation.

  * Rearrange headers to suppress a warning in py_config.h.

  * Several fixups for changes in the SimData api related to logging and
    exceptions.

2004-06-20: onsight
  * Changed doxygen control file to recurse into the variou subdirectories
    (Systems, Theater, etc).

  * Changed some print statements to use logging instead.

  * Added a mainpage comment for the doxygen docs.

2004-06-14: onsight
  * Added doxygen directory, control file, and make targets.

  * Updated docs in Bus.h and inlined a few methods.

2004-06-13: onsight
  * Added many detailed comments to System.h, as well as a general overview.

2004-06-13: wolverine
  * Added DispatchMessageHandler to the networking layer to forward incoming
    messages to the correct object.

2004-06-12: wolverine
  * Added Dispatch.h as a possible way to dispatch network messages through
    object hierarchies.  Not integrated with the build yet.

2004-06-12: wolverine
  * Switching the writing of network buffers to use a SimData MemoryWriter.
    Switched the code that reads network buffers to use a SimData
    MemoryReader

2004-06-11: onsight
  * Removed most serialize() methods, since SimData now handles saving and
    loading of the public XML interface automatically.  Minor tweaks to
    Sky.cpp to serialize the stars (which don't use the standard XML
    facilities).

  * Added a relative path to SimData in the working copy to the Python path
    in CSPSim.py so that SimData will not be loaded from site-packages.  The
    idea is that CSPSim and SimData will be developed concurrently, and we
    don't want to have to go through a separate install process everytime
    something changes.  Changes to SimData that require simultaneous changes
    to CSPSim should be checked in as one submission.

  * Added an exception handler to CSPSim to suppress a stack trace when the
    data compiler fails.  The real trace is already logged, and this makes
    the error message more visible.

  * Changed the configure script under Linux to look for SimData in the
    working copy rather than site-packages.  Not quite working so currently
    disabled.  Also set the SimData include path to be local in the Makefile.

==> Windows devs: please change the project file to use the working copy
    of SimData rather than the version installed in site-packages.

  * Added GNU Common C++ check to the configure script, and include/libs
    to the Makefile templates.

2004-06-10: wolverine
  * Merged the networking classes MessageSocketDuplex into
    NetworkMessenger. Also added a callback mechanism to handle
    received messages.

2004-05-30: wolverine
  * Changed the router queue in NetworkMessagener to be a vector that
    contains a struct with a node and message pointers. This allows
    a destination node to be associated with each outgoing message. This
    approach hopefully avoids any object creation steps during the queueing
    and dequeing processes.

2004-05-28: wolverine
  * Created special data transfer structures that contain no virtual
    functions and have the same fundamental binary structure as SimData types
    minus the virutal function tables. These structures really just
    create memory place holders in the object network messages that
    the regular SimData types can be mem copied over, the elements of the
    transfer structures do not need to be directly accessed except
    for debugging purposes.

2004-05-23: wolverine
  * Changes to the format of the object update message. Now There
    is a special class for the object update payload section that
    contains fields for the payload data members. This should be
    uptained by casting the payload ptr to a ObjectUpdateMessagePayload
    pointer for both send and receive. Loading and Unloading can be
    performed with object assignments instead of memcpys to make
    the code a little clearer.

2004-05-16: wolverine
  * changes to networking include configuration from CSPSim.ini
    which includes ports, server node, option to disable/enable
    networking. Also removed a few extra printf statesments.
    Added NetworkMessage pooling/memory manage.

2004-05-15: wolverine
  * Changes to and cleanup to networking code.

2004-05-12: delta
  * Removed obsolete ComputeTransformCallback in Source/VirtualScene.cpp
    and replaced it by an osg::Transform (lunadog's post).

2004-05-09: delta
  * Minor cleanings in Include/CSPSim.h.

  * Commented out glFinish() in Source/VirtualScene.cpp which can be
    responsible of performance hits. Must be tested.

  * Decreased Radius of the skydome (Source/Sky.cpp) to provide a quick
    and dirty hack of the "black sky" symptom on ATI hardware.

  * Minor changes to VisualStudio/CSPSimDLL.vcproj.

  * Changed the date in Data/CSPSim.ini.

2004-05-08: Wolverine
  * More updates to networking. Including changes so both windows and unix
    can compile.

2004-05-02: wolverine
  * Updates to the networking to use commonc++, and export a python module.

2004-05-02: delta
  * Corrected a PYTHONPATH instead of PYTHON_PATH in the debug
    vs project file.

  * Minor others changes.

2004-04-25: delta
  * Added CSPSim/Data/Fonts.

  * Added Data/Models/Mirage2000/Glass.tga

  * Added Demeter & CSPChunkLod projects to CSPSim as dependencies.
    Building CSPSim now builds terrain lib dependencies.

  * Adjusted paths in CSPSim project.

  * Cleaned up VirtualScene.cpp.

2004-04-17: delta
  * Minor fixes to get the build going under windows.

2004-04-17: wolverine
  * Added initial networking functionality. This includes new files
    in the Source/Networking subdirectory and changes to some current
    file.

  * Made some changes in NetworkSocket.cpp to be more compatible with
    windows.

2004-04-17: delta
  * Changed COLOR to COLOR0 to enforce arbvp1 compatibility in
    nvMorph.cg.

  * Added a debug project file for heightfield_shader.

  * Removed osgProducer dependency on CSPSimDLL (not needed yet).

  * Commented out thread managing in LogoScreen.cpp.

  * Increased the number of local steps in
    void AircraftPhysicsModel::doSimStep(double dt).

2004-04-07: delta
  * Corrected a bug in the handling of mouse's scroll up/down.
    Added CameraCommands and extended CameraKinematics to achieve
    it.

  * Renamed CameraAgent::notifyToObjectToView to setObject.

  * Experimenting a smaller time step in physic model.

2004-04-04: onsight
  * Minor fixes to get the build going under linux.

2004-04-04: delta
  * Added views classes to help in GameScreen. These files are
    located under Views folders.
==========> Linux users: add CSPSim/Source/Views folder to the
    build.

2004-03-19: delta
  * Added a vectors' arithmetic implemented with expression
    template (mainly needed due to the poor performance of vs
    7.1's std::valarray<T>; recent version of g++'s std::valrray<T>
    is really fancy) in Vector.h; Vector class is protected behind
    a Vector namespace. By default, very few vector's arithmetic is
    used and the valarray alternative is only used on vs 7.1. Two
    macros parametrize its use: NOT_USE_VALARRAY (in Vector.h) and
    USE_VALARRAY_ARITHMETIC (in NumericalMethod.h).

  * The abstract class VectorField has moved in VectorField.h.

  * Reformated numerical code (NumericalMethod.*); added a new
    numerical method based on Cash Karp original article. Old
    methods are kept during tests.

  * Changed PYTHONPATH environment variable to PYTHON_PATH and
    SWIGPATH to SWIG_PATH to avoid possible names conflict with
    predefined environment variables (that does only affect vs
    project file).

  * Changed 0x1 value osg node mask to the safer 0xffffffff value.

  * Other minor changes.

2004-01-31: onsight
  * Patched acinclude.m4, configure.in, and Source/Makefile.in to
    handle SWIG 1.3.20 and newer.  When used with a newer version
    of SWIG, the '-c' flag is replace with '-noruntime', and the
    swigpy library is not linked against.  You may need to rebuild
    SimData (which has undergone a similar change).

  * Now tests for and links against the osgFX library.

2004-01-27: delta
  * Added a method to access viewport dimensions in VirtualScene.

  * Added a print screen command in GameScreen class to take
    a snapshot of the main window (feature requested by MrIch).
    Command is mapped to 'o' key. The image is currently saved
    (by default) as a bmp file in APPLICATIONS/CSPSim/Bin; the
    filename format is: CSPScreenmmddyy-hhmmss.bmp
==========> All users, update
    APPLICATIONS/CSPSim/Tools/HID/Maps/gamescreen-core.map, rebuild
    gamescreen.hid and RebuilData(.py).

2004-02-24: delta
  * Fixed a bug in ScreenInfoManager causing an incomplete texts
    display when changing vehicule.

  * Renamed std::string SnapImageDrawCallback:builSuffix() to
    getDate() in GameScreen.cpp.

  * Changed implementation in views 1 & 2. Added a safer control
    of the cam position when on ground.

  * Other minor changes.

2004-01-23: delta (suggested by Wolverine69)
  * Changed <python.h> to <Python.h> in
    APPLICATIONS/CSPSim/Source/CSPSim.cpp.

2003-12-30: delta
  * Added methods in VirtualScene to access projection/mv matrix.

2003-12-29: delta
  * More investigations on MARKERS_TOGGLE lead to
    m_Actions[id.c_str()] from the method onCommand in
    InputInterface and to the hash string simdata functions.
    A string with size > 13 may lead to unexpected behaviour.
    Not fixed yet.

  * Updated CSPSimDLL.vcproj to be able to debug it. Use debug
    built (export symbols are enabled).

2003-12-22: delta
  * Reimplemented LogoScreen a la osg. A sequence of screens is
    now loaded.
==========> All users, update APPLICATIONS/CSPSim/Data/Images.

  * MARKERS_TOGGLE string behaves weirdly with vc++. For now,
    it is changed to MARKS_TOGGLE but it will need a complete
    fix (problem might be similar for strings longer than N
    characters).
==========> All users, update
    APPLICATIONS/CSPSim/Tools/HID/Maps/aircraft-core.map, rebuild
    aircraft.hid and RebuilData(.py).

2003-12-21: delta
  * Fixed stars at daytime on windows (GL_BLEND problem).

  * Separated gears and markers control.

  * Added an osgFX effect (specular highlight). May produce
    a warning on old generation graphic card.
==========> Linux users, link onto osgFX lib.

  * Reenabled texture unit 1 code in ScreenInfo.cpp.

  * Other minor changes.

2003-10-24: onsight
  * Added some SimData header includes that were included
    implicitly before via SimData/TypeAdapter.h.

2003-10-23: onsight
  * Changed XML path to come under CachePath in CSPSim.py
    (submitted by VI).

  * Fixed errant data path in CSPSim.ini.

2003-10-21: onsight
  * Cleaned up the code that initializes the test sound.  The
    sim won't abort if it can't find the sound file or open
    an audio device, but a warning is written to the log.

  * Added a modified version of Lologramme's Mirage 2000
    model and textures to CVS.  This version includes special
    hooks for CSP animations.  The model and textures are
    under Data/Models/Mirage2000, and the including COPYING
    file lists copyright information.  The m2k/model.xml file
    now points to this 3D model.

  * Changed the CHANGES.current format to be clearer and more
    space-efficient.

2003-10-19: onsight
  * Updated configure script to check for osg 0.9.6.  Version
    0.9.4 can still be used, if necessary.  To do so, change
    configure.in to check for 0.9.4, run autoconf, then
    ./configure.  Finally, edit Include/CSPSim.h and uncomment
    the #define CSP_OSG_094 line.

2003-10-19: onsight
  * Updated the xml files to remove the 'static' attribute (now
    set in the class definition), and convert the engine thrust
    tables to use simdata::Table2.  Added systems.xml to
    vehicles/aircraft/m2k.

2003-10-19: onsight
  * Tagged r0_3_5 and started branch b0_3.  Merged 'systems'
    branch into the trunk to start version 0.4.0.

2003-10-19: onsight
  * Modified class Thrust to use simdata::Table2 instead of the
    deprecated simdata::Table class.  Note that the XML thrust
    tables must be modified to use this new class, but that these
    changes will not be checked into cvs (to prevent clashes with
    the trunk).  The corrected files will be posted at
    http://csp.sourceforge.net/downloads (soon) until the systems
    branch is merged to make v0.4.0.

  * SIMDATA_OBJECT(...) changed to SIMDATA_STATIC_OBJECT(...) for
    object classes that are static.  This was previously specified
    per object in the associated xml file using the 'static' attr.
    That use is deprecated in simdata 0.4; now object classes are
    either static or not.

2003-10-14: onsight
  * Removed very old TerrainSymbol.h

2003-10-11: onsight
  * Tracked down '#define min' from windows.h (no surprise), which
    was included via Producer/RenderSurface.  Added #undef's there
    as a temporary fix.

  * Changed the classes related to input events and hid mapping
    to use reference counting.

  * Moved CSP_OSG_094 to CSPSim.h.  You must uncomment this line
    to use OSG version 0.9.4 or older.

==========> VC users add System.cpp, SystemsModel.cpp, and Systems/*.cpp
    to the project.

2003-10-09: onsight
  * Fixed minor snprintf problem under msvc.

  * Split the SystemsModel class out of System.h/cpp into
    SystemsModel.h/cpp.  This seems to be a better arrangement,
    and hopefully circumventns a problem with forward
    declarations + simdata::Link<> under msvc.

2003-10-05: onsight
  * Changed HID to inherit from simdata::Referenced.  Minor
    changes to BaseScreen, GameScreen, and CSPSim to support
    this change.

2003-09-25: onsight
  * Integrated VI's patches for OSG 096 support.  Changes
    camera handling in near/far SceneView intances in
    VirtualScene.cpp.

  * Various OSG 096 fixes:
      + SceneView aspect ratio
      + NearView projection matrix
      + False horizon coloring
      + Skydome (non-TEXDOME) coloring

  * To use OSG 094, uncomment the #define CSP_OSG_094 line
    in VirtualScene.cpp

2003-09-17: onsight
  * Major refactoring of the aircraft components in terms of
    the System/SystemsModel architecture.  PhysicsModel is now
    a System under the main SystemsModel for the vehicle.  The
    BaseDynamics classes are also Systems, although they only
    function as dynamics when placed directly underneath the
    PhysicsModel node.  Almost all of the original inter-
    component communications are now implemented through the
    bus architecture.  A few hacks remain, such as the landing
    gear sprites (which needs to be overhauled in terms of
    standard animations once a suitable 3d model is available).

  * Significant changes to the DataRecorder interface.

  * Changed the stats display interface to allow each System
    to add its own info lines to the display by extending
    getInfo().

  * Changes to the XML data for the m2k to support the new
    vehicle interfaces.

2003-09-15: onsight
  * Added SynchronousUpdate.h and SynchronousUpdate.cpp as the
    basis for a new update callback infrastructure.

2003-09-13: onsight
  * Renamed Model to SystemsModel

  * Removed F16Model from the build.

  * Added m_SystemsModel to DynamicObject to reference the
    current systems model.  The setHuman() and setLocal()
    methods now handle updates of the model, using two new
    simdata::Path member variables: m_AgentModel and m_HumanModel.

  * SystemModel updates are now hooked into DynamicObject updates.

  * Input events are chained to the systems model if the dynamic
    object doesn't handle them.

  * Changed the mapped input event interface.  The onCommand,
    onAxis, and onMotion methods of InputInterface are now
    private, and all mapped events are passed via the onMapEvent
    method.  Overriding these methods was generally used to pass
    events to subobjects, so it is easier now that only one method
    needs to be extended.  The raw event handlers were excluded
    from this interface, since raw events are more often handled
    by top-level objects.  MapEvent is a wrapper type that
    encompasses the three original types of events.

2003-09-07: onsight
  * Added Include/System.h and Include/Bus.h, which provide
    infrastructure for constructing detailed vehicle models.
    Several existing components such as the data recorder and
    flight model need to be refactored to use this new
    interface.

  * Minor warning cleanups in System.h and Bus.h.

2003-08-20: onsight
  * Tagged version r0_3_4, starting version 0.3.5
