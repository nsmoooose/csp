// -*-c-*-
// Combat Simulator Project
// Copyright (C) 2006 The Combat Simulator Project
// http://csp.sourceforge.net
//
// This program is free software; you can redistribute it and/or
// modify it under the terms of the GNU General Public License
// as published by the Free Software Foundation; either version 2
// of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful,
// but WITHOUT ANY WARRANTY; without even the implied warranty of
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
// GNU General Public License for more details.
//
// You should have received a copy of the GNU General Public License
// along with this program; if not, write to the Free Software
// Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.

varying vec3 normal;
varying vec3 halfvector;
varying vec3 reflection;

uniform mat4 osg_ViewMatrixInverse;

void main() {
	normal = normalize(gl_NormalMatrix * gl_Normal);
	halfvector = normalize(gl_LightSource[0].halfVector.xyz);
	vec3 camera = normalize(vec3(gl_ModelViewMatrix * gl_Vertex));
	vec4 reflect_eye = vec4(reflect(camera, normal), 0.0);
	reflection = vec3(normalize(osg_ViewMatrixInverse * reflect_eye));

	gl_TexCoord[0] = gl_MultiTexCoord0;
	gl_TexCoord[1] = gl_MultiTexCoord1;

	gl_Position = ftransform();
}


