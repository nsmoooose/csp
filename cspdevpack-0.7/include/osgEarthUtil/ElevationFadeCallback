/* -*-c++-*- */
/* osgEarth - Dynamic map generation toolkit for OpenSceneGraph
* Copyright 2008-2009 Pelican Ventures, Inc.
* http://osgearth.org
*
* osgEarth is free software; you can redistribute it and/or modify
* it under the terms of the GNU Lesser General Public License as published by
* the Free Software Foundation; either version 2 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
* GNU Lesser General Public License for more details.
*
* You should have received a copy of the GNU Lesser General Public License
* along with this program.  If not, see <http://www.gnu.org/licenses/>
*/

#ifndef OSGEARTHUTIL_ELEVATIONFADECALLBACK
#define OSGEARTHUTIL_ELEVATIONFADECALLBACK

#include <osg/NodeCallback>
#include <osg/CoordinateSystemNode>


#include <osgEarth/FindNode>
#include <osgEarth/MapNode>

#include <osgEarthUtil/Common>

namespace osgEarthUtil
{
	/**
	*The ElevationFadeCallback works in conjunction with a FadeLayerNode to fade between layers at specified elevation points
	*Note:  The ElevationFadeCallback must be installed on the FadeLayerNode as both a cull cullback and as an update callback to function properly
	*/
	class OSGEARTHUTIL_EXPORT ElevationFadeCallback : public osg::NodeCallback
	{
	public:
		/**
		*Creates a new ElevationFadeCallback
		*/
		ElevationFadeCallback();

		virtual void operator()(osg::Node* node, osg::NodeVisitor* nv);

		/**
		*Gets the elevation at which layer i will be visible
		*/
		double getElevation(unsigned int i) const;

		/**
		*Sets the elevation at which layer i will be visible
		*/
		void setElevation(unsigned int i, double elevation);

		/**
		*Gets the animation time
		*/
		float getAnimationTime() const;

		/**
		*Sets the animation time
		*/
		void setAnimationTime(float animationTime);

	private:
     	osg::observer_ptr<osg::CoordinateSystemNode> _csn;
		double _currentElevation;

		typedef std::vector<double> Elevations;
		Elevations _elevations;

		bool _firstFrame;
		double _previousTime;
		double _animationTime;
	};
}

#endif //OSGEARTHUTIL_ELEVATIONFADECALLBACK