.TH "SocketService" 3 "22 May 2003" "CommonC++" \" -*- nroff -*-
.ad l
.nh
.SH NAME
SocketService \- The SocketService is a thread pool object that is meant to service attached socket ports. \fBThread\fP pool service object for socket ports. 
.SH SYNOPSIS
.br
.PP
\fC#include <socket.h>\fP
.PP
Inherits \fBThread\fP, and \fBMutex\fP.
.PP
.SS "Public Methods"

.in +1c
.ti -1c
.RI "void \fBupdate\fP (unsigned char flag=0xff)"
.br
.RI "\fINotify service thread that a port has been added or removed, or a timer changed, so that a new schedule can be computed for expiring attached ports.\fP"
.ti -1c
.RI "\fBSocketService\fP (int pri=0)"
.br
.RI "\fICreate a service thread for attaching socket ports.\fP"
.ti -1c
.RI "virtual \fB~SocketService\fP ()"
.br
.RI "\fITerminate the thread pool and eliminate any attached socket ports.\fP"
.ti -1c
.RI "int \fBgetCount\fP (void) const"
.br
.RI "\fIGet current reference count.\fP"
.in -1c
.SS "Protected Methods"

.in +1c
.ti -1c
.RI "virtual void \fBonUpdate\fP (unsigned char buf)"
.br
.RI "\fIHandles all requests other than 'termination'.\fP"
.ti -1c
.RI "virtual void \fBonEvent\fP (void)"
.br
.RI "\fICalled once each time the service thread is rescheduled.\fP"
.ti -1c
.RI "virtual void \fBonCallback\fP (\fBSocketPort\fP *port)"
.br
.RI "\fICalled for each port that is being processed in response to an event.\fP"
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBSocketPort\fP"
.br
.in -1c
.SH "DETAILED DESCRIPTION"
.PP 
The SocketService is a thread pool object that is meant to service attached socket ports. \fBThread\fP pool service object for socket ports.
.PP
Multiple pool objects may be created and multiple socket ports may be attached to the same thread of execution. This allows one to balance threads and sockets they service rather than either using a single thread for all connections or a seperate thread for each connection. Features can be added through supported virtual methods.
.PP
\fBAuthor: \fP
.in +1c
David Sugar <dyfet@ostel.com> 
.PP
.SH "CONSTRUCTOR & DESTRUCTOR DOCUMENTATION"
.PP 
.SS "SocketService::SocketService (int pri = 0)"
.PP
Create a service thread for attaching socket ports.
.PP
The thread begins execution with the first attached socket.
.PP
\fBParameters: \fP
.in +1c
.TP
\fB\fIpri\fP\fP
of this thread to run under. 
.SS "virtual SocketService::~SocketService ()\fC [virtual]\fP"
.PP
Terminate the thread pool and eliminate any attached socket ports.
.PP
.SH "MEMBER FUNCTION DOCUMENTATION"
.PP 
.SS "int SocketService::getCount (void) const\fC [inline]\fP"
.PP
Get current reference count.
.PP
This can be used when selecting the least used service handler from a pool.
.PP
\fBReturns: \fP
.in +1c
count of active ports. 
.SS "virtual void SocketService::onCallback (\fBSocketPort\fP * port)\fC [inline, protected, virtual]\fP"
.PP
Called for each port that is being processed in response to an event.
.PP
This can be used to add additional notification options during callback in combination with \fBupdate()\fP.
.PP
\fBParameters: \fP
.in +1c
.TP
\fB\fIport\fP\fP
\fBSocketPort\fP who's callback events are being evaluated. 
.SS "virtual void SocketService::onEvent (void)\fC [inline, protected, virtual]\fP"
.PP
Called once each time the service thread is rescheduled.
.PP
This is called after the mutex is locked and can be used to slip in additional processing. 
.SS "virtual void SocketService::onUpdate (unsigned char buf)\fC [inline, protected, virtual]\fP"
.PP
Handles all requests other than 'termination'.
.PP
\fBParameters: \fP
.in +1c
.TP
\fB\fIbuf\fP\fP
request id as posted from \fBupdate()\fP. 
.SS "void SocketService::update (unsigned char flag = 0xff)"
.PP
Notify service thread that a port has been added or removed, or a timer changed, so that a new schedule can be computed for expiring attached ports.
.PP
A '0' is used to terminate the service thread, and additional values can be specified which will be 'caught' in the \fBonUpdate()\fP handler.
.PP
\fBParameters: \fP
.in +1c
.TP
\fB\fIflag\fP\fP
update flag value. 
.SH "FRIENDS AND RELATED FUNCTION DOCUMENTATION"
.PP 
.SS "friend class SocketPort\fC [friend]\fP"
.PP


.SH "AUTHOR"
.PP 
Generated automatically by Doxygen for CommonC++ from the source code.
