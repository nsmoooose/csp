Input maps for CSPSim
========================================================================

Currently there are two important input maps that you must have for
CSPSim to function properly.  One is called the "gamescreen" map,
which handles commands like Exit, Pause, Change views, etc.  The
other is the "vehicle" map which is used to control the current
vehicle.  As the only vehicle right now is the Mirage 2000, the
vehicle map you need is 'aircraft.map'.  The input mapping system
is designed to be highly sophisticated and flexible, but here we
just present some of the basics for getting started.  If you want
to learn more about programming map files, see README.map.

The first this you must do is create "customized" maps.  The maps
available in CVS are often updated with new functionality, so it
is best to create your own maps that extend these basic maps.  This
way whenever the CVS maps are updated you will then gain the new
functionality without losing any of your customizations.

To start, copy aircraft.map and gamescreen.map from the Examples
directory to the current directory.  These will be your custom
maps.  They automatically include the appropriate maps in the Maps
directory, and these key bindings which should be fine to start
with.   You should however modify the joystick axis binding to suit
your particular stick and throttle.  There are some stick bindings
in Examples/aircraft.map that may or may not work for you since
the axis number vary from stick to stick.

Under Linux you can run the jstest utility (which is included in
most distributions) to see which axis numbers your stick, throttle,
and rudders map to.  I'm not sure of a simple way to determine this
under Windows, but if all else fails you can resort to trial and
error. /* can one of the windows developers please comment on
this? */

After you modify a map file, you must create a corresponding "hid"
(human interface device) file for use in the simulation.  To do so,
use the cspinput tool in this directory.  The resulting hid files
must be placed in the CSPSim Data/Input directory before they can
be used.

Here are some examples for converting from map to hid under Linux:

  $ ./compile.py aircraft.map
  $ cp aircraft.hid ../../data/input

or

  $ ./compile aircraft.map - >../../data/input

and under Windows:

  > python compile.py aircraft.map
  > copy aircraft.hid ..\..\data\input

or

  > python compile.py aircraft.map - >..\..\data\input

Also under Windows you can usually just drag and drop your map
file onto the cspinput icon, then drag the resulting hid file to
the data\input directory.

