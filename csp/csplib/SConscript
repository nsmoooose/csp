# -*- python -*-
Import("env")

e = env.Clone()
e.ParseConfig('pkg-config --cflags --libs libccgnu2')
e.ParseConfig('pkg-config --cflags --libs sigc++-2.0')
e.AppendUnique(CPPDEFINES=Split('CSPSIM_EXPORTS __CSPSIM_EXE__'))

e.Program("csplib_config", "util/Config.cpp")
config = e.Command("util/Config.h", "csplib_config", "csplib/csplib_config > $TARGET")
e.Alias('config', config)

e.CspTrc(['net/ClientServerMessages.cpp', 'net/ClientServerMessages.h'], 'net/ClientServerMessages.net')

e.Append(CPPDEFINES=Split('CSPLIB_EXPORTS'))
csplib = e.SharedLibrary('csplib', [
    'data/Archive.cpp',
    'data/DataArchive.cpp',
    'data/DataManager.cpp',
    'data/Date.cpp',
    'data/Enum.cpp',
    'data/External.cpp',
    'data/GeoPos.cpp',
    'data/InterfaceProxy.cpp',
    'data/InterfaceRegistry.cpp',
    'data/Key.cpp',
    'data/LUT.cpp',
    'data/Link.cpp',
    'data/Matrix3.cpp',
    'data/Object.cpp',
    'data/Path.cpp',
    'data/Quat.cpp',
    'data/Real.cpp',
    'data/TypeAdapter.cpp',
    'data/Vector2.cpp',
    'data/Vector3.cpp',

    'net/ClientServer.cpp',
    'net/ClientServerMessages.cpp',  # Generated from net/ClientServerMessages.net
    'net/DispatchHandler.cpp',
    'net/DispatchManager.cpp',
    'net/DispatchTarget.cpp',
    'net/NetRandom.cpp',
    'net/NetworkInterface.cpp',
    'net/NetworkNode.cpp',
    'net/PeerInfo.cpp',
    'net/RecordCodec.cpp',
    'net/RoutingHandler.cpp',
    'net/TaggedRecordRegistry.cpp',

    'numeric/NumericalMethod.cpp',

    'spatial/QuadTree.cpp',

    'util/Exception.cpp',
    'util/FileUtility.cpp',
    'util/HashUtility.cpp',
    'util/LocalUpdate.cpp',
    'util/LogStream.cpp',
    'util/Modules.cpp',
    'util/Noise.cpp',
    'util/Random.cpp',
    'util/SimpleConfig.cpp',
    'util/StringTools.cpp',
    'util/SynchronousUpdate.cpp',
    'util/Testing.cpp',
    'util/Timing.cpp',
    'util/Trace.cpp',
    'util/Version.cpp',
    'util/WeakReferenced.cpp',

    'xml/XmlParser.cpp',
])
e.Alias('csplib', csplib)

lib_env = env.Clone()
lib_env.ParseConfig('pkg-config --cflags --libs python')
lib_env.Append(LIBS = 'csplib', LIBPATH=['#/csplib'])
csplib_module = lib_env.SharedLibrary('_csplib_module', ['csplib.i'], SHLIBPREFIX='')
lib_env.Alias('csplib_module', csplib_module)
Export('csplib_module')
