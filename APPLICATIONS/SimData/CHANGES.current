Version 0.3.4 (in progress)
===========================

2003-08-19: onsight
            Added documentation.

	    Made BaseType::asString and BaseType::typeString pure virtual
	    to force them to be defined in each derived type.

	    Implemented typeString in LUT, Table, and Curve.

	    Added more complete error messages (including variable types)
	    to the TypeAdapter functions.

	    Added additional error information to the MemberAccessor
	    classes to include the name of the variable being set if
	    TypeAdapter throws an exception.

	    Added an 'addMessage()' method to Exception, which prepends
	    a newline-terminated string to the existing message.  The
	    original 'appendMessage()' is unchanged.

	    Added typeString to the SWIG interface for LUT to prevent
	    SWIG from thinking its is an abstract class.


2003-08-18: onsight
            More Doxygen fixes, reorganization, and added
	    documentation.

2003-08-17: onsight
            Fixed assertion range errors in Matrix3.h

	    Moved template metaprogramming structs into the
	    'meta' namespace in PTS.h.

	    Removed GlibCsp.h includes in GeoPos.cpp and 
	    DataArchive.cpp, with associated fixups.

	    Added byte-order tests to Uniform.h.

	    Tried adding template-meta-programming-style fixed
	    integer size typedef mappings (e.g. uint32), but
	    SWIG chokes on these so it's back to hard-coded
	    typedefs.  For now these should work on most systems 
	    that SimData is likely to run on.  Autoconf is the
	    obvious alternative, but I'd rather not use it at
	    this point.

2003-08-16: onsight
            Replaced several old-school buffer allocations with
	    std::vector equivalents in DataArchive.

2003-08-15: onsight
            More Doxygen work.

	    Move loadcheck to BaseType.cpp, which is much more
	    likely to be linked to any application using SimData.
	    The load message can be disabled by building with
	    SIMDATA_NOLOADCHECK defined.

	    Changed a couple sprintf/printf's to iostreams.

            Prefixed internal macro names in Object.h with 'SIMDATA'.

	    Changed hash_string from a macro to an inline function
	    in the simdata namespace.

	    Added Utility.h, removed GlibCSP.h from the setup.py
	    installation.

	    Minor improvements to the DataArchive internal structures.
	    There more to do here, such as using std::vector instead
	    of hand-rolled allocations.

2003-08-14: onsight
            Doxygen comment fixes.

	    Removed GlibCsp, replacing what little we used with
	    a few typedefs in Uniform.h (now in the simdata
	    namespace).  Eliminates many macro definitions and
	    unqualified names.

	    Cleaned up HashUtility.h, eliminating dead code and
	    superfluous typemaps.

	    Moved timing code inside the simdata namespace.

2003-08-13: onsight
            Complete rewrite of the Enumeration classes, using Enum
	    templates, simdata::Ref, and an overall better design.  The
	    new code allows the parent Enumerations to be bound to 
	    member variable *types* duing static construction, so that
	    the possible values for a type can be querried without
	    instantiating the parent class.  This is very useful for
	    introspecting classes, allowing a SimData XML editor to
	    determine a list of possible values for an Enum directly
	    from an ObjectInterface without creating an instance of
	    the corresponding class.  The Python bindings for the
	    Enum classes have also been redesigned and improved.

	    Changed some DataArchive and hash methods to use
	    std::string const& instead of const char*.

	    Fixed some bugs in Date.h and Matrix.h that '-pedantic'
	    uncovered.  Added more base class ctor calls to satisfy
	    '-pedantic' as well.

	    Added isSubclass() method to ObjectInterface (and the
	    InterfaceProxy clases) to test the inherintance chain
	    using interfaces without creating object instances.  The
	    class relationships used in the test are based on the
	    classes listed in the SIMDATA_XML_INTERFACE() macros, not
	    the full C++ class hierarchy.

	    Added SIMDATA_SUBEXCEPTION macro for creating exception
	    hierarchies.

	    Changed the default version string to report the build 
	    date and time, which provides a helpful sanity check when
	    more than one version of the SimData is in your library 
	    search path.

2003-08-10: onsight
            Minor fixes/pragmas to reduce useless warning messages under
	    VS 2003.

	    Added support to the object registry, object interfaces,
	    and member accessors for member variable type introspection.
	    BaseTypes other than Object must now override typeString()
	    to return a string identifier for their type (which should
	    start with "type::").  Other prefix convensions are as
	    follows:
	      * Type strings for builtin types (like 'float') start with 
	        'builtin::'.  See ObjectInterface.h for a complete list.
              * Type strings for BaseTypes other than Object start with 
	        'type::', followed by the name of the type (e.g. Date).
	      * Type strings for Objects are just the classname of the 
	        object.  
	      * Type strings for std::vectors start with 'vector::'.  
	      * Type strings for templated classes are followed by the 
	        template type (e.g. type::Link::SomeObjectClass).

	    Added object interface lookup based on object id to DataArchive
	    and DataManager.  Given an object ID (or path) you can now
	    determine the object class and introspect the member variables
	    without creating an instance of the object.

2003-08-07: onsight
            Added SIMDATA_EXPORT to classes in Random.h

	    Fixed #include <float.h> bug in Math.h under Windows

	    Moved some inline friend declarations out of the Vector3
	    class declaration to help MSVC find them.

2003-08-06: onsight
            Removed Math.i and Vector3.inl from setup.py.

2003-08-05: onsight
            Replaced Random, Vector3, Matrix3, and Quaternion classes with
	    GPL'd code.  The APIs for these classes have changed significatly,
	    although the overall functionality should be similar.

	    Copyright notices updated.

	    ns-simdata.h renamed Namespace.h.

	    NAMESPACE_END renamed NAMESPACE_SIMDATA_END

	    A couple double/float comparison fixes.

	    Fixed Marsenne -> Mersenne typos.

==========> VS USERS: remove Quaternion.cpp from the project and add Quat.cpp

2003-08-04: onsight
            Tagged r0_3_3, version 0.3.4 started.

