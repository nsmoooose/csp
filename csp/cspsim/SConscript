# -*- python -*-
#
# Copyright 2004-2005 Mark Rose <mkrose@users.sourceforge.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

Import('env build')

expenv = env.Copy()
expenv.AppendUnique(CPPDEFINES=Split('CSPSIM_EXPORTS __CSPSIM_EXE__'))


build.SourceGroup(expenv,
	name = 'cspsim/battlefield',
	sources = [
		'battlefield/Battlefield.cpp',
		'battlefield/Battlefield.h',
		'battlefield/BattlefieldMessages.net',
		'battlefield/SimObject.cpp',
		'battlefield/SimObject.h',
	],
	deps = ['csplib'])

build.SourceGroup(expenv,
	name = 'cspsim/config',
	sources = [
		'Config.cpp',
		'Config.h',
		'config/Configuration.cpp',
		'config/Configuration.h',
		'config/Display.cpp',
		'config/Display.h',
		'config/UserInterface.cpp',
		'config/UserInterface.h',
	],
	deps = ['csplib'])

build.SourceGroup(expenv,
	name = 'cspsim/sky',
	sources = [
		'sky/Colorspace.cpp',
		'sky/Colorspace.h',
		'sky/Magnitude.cpp',
		'sky/Magnitude.h',
		'sky/OrbitalBody.cpp',
		'sky/OrbitalBody.h',
		'sky/OrbitalBodyImposter.cpp',
		'sky/OrbitalBodyImposter.h',
		'sky/OrbitalBodyModel.cpp',
		'sky/OrbitalBodyModel.h',
		'sky/PhaseShader.cpp',
		'sky/PhaseShader.h',
		'sky/SkyDome.cpp',
		'sky/SkyDome.h',
		'sky/SkyObserver.cpp',
		'sky/SkyObserver.h',
		'sky/SkyShader.cpp',
		'sky/SkyShader.h',
		'sky/SolarSystem.cpp',
		'sky/SolarSystem.h',
		'sky/StarDome.cpp',
		'sky/StarDome.h',
		'sky/Stars.h',
	],
	deps = ['csplib', 'osg'])

build.SourceGroup(expenv,
	name = 'cspsim',
	sources = [
		'ai/AircraftAgent.cpp',
		'ai/AircraftAgent.h',
		'ai/AircraftControl.cpp',
		'ai/AircraftControl.h',
		'ai/AircraftMission.cpp',
		'ai/AircraftMission.h',
		'ai/AircraftTask.cpp',
		'ai/AircraftTask.h',
		'ai/DiveRecovery.cpp',
		'ai/DiveRecovery.h',
		'ai/LandingTask.cpp',
		'ai/LandingTask.h',
		'ai/TakeoffTask.cpp',
		'ai/TakeoffTask.h',
		'ai/PID.h',
		'ai/StateMachine.cpp',
		'ai/StateMachine.h',
		'ai/Task.cpp',
		'ai/Task.h',

		'AircraftObject.cpp',
		'AircraftObject.h',
		'Animation.cpp',
		'Animation.h',
		'AnimationSequence.cpp',
		'AnimationSequence.h',
		'Atmosphere.cpp',
		'Atmosphere.h',
		'BaseDynamics.cpp',
		'BaseDynamics.h',
		'BaseScreen.cpp',
		'BaseScreen.h',
		'Bus.cpp',
		'Bus.h',
		'CSPSim.cpp',
		'CSPSim.h',
		'ChannelMirror.h',
		'Channels.cpp',
	#	'ChunkLodTerrain.cpp',
	#	'ChunkLodTerrain.h',
		'CockpitInterface.cpp',
		'CockpitInterface.h',
		'Collision.cpp',
		'Collision.h',
		'ConditionsChannels.h',
		'ControlInputsChannels.h',
		'ControlNode.h',
		'ControlSurfacesChannels.h',
		'Controller.cpp',
		'Controller.h',
		'DamageModifier.cpp',
		'DamageModifier.h',
		'DataRecorder.cpp',
		'DataRecorder.h',
	#	'DemeterTerrain.cpp',
	#	'DemeterTerrain.h',
		'DoubleChannelMirror.cpp',
		'DynamicObject.cpp',
		'DynamicObject.h',
		'Engine.cpp',
		'Engine.h',
		'EventMapIndex.cpp',
		'EventMapIndex.h',
		'EventMapping.cpp',
		'EventMapping.h',
		'Exception.cpp',
		'Exception.h',
		'Filters.h',
		'FlightControlSystem.cpp',
		'FlightDynamics.cpp',
		'FlightDynamics.h',
		'FlightDynamicsChannels.h',
		'FlightModel.cpp',
		'FlightModel.h',
		'FuelManagementSystem.cpp',
		'FuelManagementSystem.h',
		'GameScreen.cpp',
		'GameScreen.h',
		'GearAnimation.cpp',
		'GearAnimation.h',
		'HID.cpp',
		'HID.h',
		'InputEvent.cpp',
		'InputEvent.h',
		'InputEventChannel.h',
		'InputInterface.cpp',
		'InputInterface.h',
		'KineticsChannels.h',
		'LandingGear.cpp',
		'LandingGear.h',
		'LandingGearChannels.h',
		'LogoScreen.cpp',
		'LogoScreen.h',
		'MapEvent.h',
		'MenuScreen.cpp',
		'MenuScreen.h',
#		'Module.cpp',
#		'Module.h',
		'NavigationChannels.h',
		'ObjectModel.cpp',
		'ObjectModel.h',
		'ObjectUpdate.net',
		'PhysicsModel.cpp',
		'PhysicsModel.h',
		'Profile.h',
		'Projection.cpp',
		'Projection.h',
		'ResourceBundle.cpp',
		'ResourceBundle.h',
		'SceneConstants.h',
		'SceneModel.cpp',
		'SceneModel.h',
		'ScreenInfo.cpp',
		'ScreenInfo.h',
		'ScreenInfoManager.cpp',
		'ScreenInfoManager.h',
		'Shader.cpp',
		'Shader.h',
		'SimpleSceneManager.cpp',
		'SimpleSceneManager.h',
		#'Sky.cpp',
		#'Sky.h',
		'SmokeEffects.cpp',
		'SmokeEffects.h',
		'StabilityFlightModel.cpp',
		'StabilityFlightModel.h',
		'StateStack.h',
		'Station.cpp',
		'Station.h',
		'Steerpoint.h',
		'System.cpp',
		'System.h',
		'SystemsModel.cpp',
		'SystemsModel.h',
		'TankObject.cpp',
		'TankObject.h',
		'TerrainObject.cpp',
		'TerrainObject.h',
		'Theater.cpp',
		'Theater.h',
		'ThrustData.cpp',
		'ThrustData.h',
		'VirtualScene.cpp',
		'VirtualScene.h',

		'battlefield/LocalBattlefield.cpp',
		'battlefield/LocalBattlefield.h',
		'battlefield/SceneManager.cpp',
		'battlefield/SceneManager.h',

		'f16/AlphaNumericDisplay.cpp',
		'f16/AlphaNumericDisplay.h',
		'f16/Constants.cpp',
		'f16/Constants.h',
		'f16/DataEntry.h',
		'f16/DataEntryDisplay.cpp',
		'f16/DataEntryDisplay.h',
		'f16/DataEntryPage.cpp',
		'f16/DataEntryPage.h',
		'f16/F16Channels.cpp',
		'f16/F16Channels.h',
		'f16/F16Engine.cpp',
		'f16/F16Engine.h',
		'f16/F16FlightModel.cpp',
		'f16/F16FlightModel.h',
		'f16/F16GearDynamics.cpp',
		'f16/F16GearDynamics.h',
		'f16/F16HUD.cpp',
		'f16/F16HUD.h',
		'f16/F16INS.cpp',
	#	'f16/F16InputSystem.cpp',
	#	'f16/F16InputSystem.h',
		'f16/F16System.cpp',
		'f16/F16System.h',
		'f16/FLCS.cpp',
		'f16/FuelSystem.cpp',
		'f16/GroundAvoidanceAdvisory.cpp',
		'f16/GroundAvoidanceAdvisory.h',
		'f16/JetFuelStarter.cpp',
		'f16/JetFuelStarter.h',
		'f16/MasterModes.cpp',
		'f16/MasterModes.h',
		'f16/MultiFunctionDisplay.cpp',
		'f16/MultiFunctionDisplay.h',
		'f16/NavigationSystem.cpp',
		'f16/NavigationSystem.h',
		'f16/PageALOW.h',
		'f16/PageCNI.cpp',
		'f16/PageCNI.h',
		'f16/PageLIST.cpp',
		'f16/PageLIST.h',
		'f16/PageSTPT.h',
		'f16/PanelHUD.cpp',
		'f16/PanelHUD.h',
		'f16/Radio.cpp',
		'f16/Radio.h',
		'f16/SpecialFonts.cpp',
		'f16/SpecialFonts.h',
		'f16/StoresManagementPages.cpp',
		'f16/UpFrontControls.cpp',
		'f16/UpFrontControls.h',
		'f16/VoiceMessageUnit.cpp',
		'f16/VoiceMessageUnit.h',

		'glDiagnostics.cpp',
		'glDiagnostics.h',

		'hud/Display.cpp',
		'hud/Display.h',
		'hud/DisplayTools.cpp',
		'hud/DisplayTools.h',
		'hud/HUD.cpp',
		'hud/HUD.h',
		'hud/PitchLadder.cpp',
		'hud/PitchLadder.h',
		'hud/Tape.cpp',
		'hud/Tape.h',
		'hud/Text.cpp',
		'hud/Text.h',

		'sound/Loader.cpp',
		'sound/OggLoader.cpp',
		'sound/Sample.cpp',
		'sound/SoundEffect.cpp',
		'sound/SoundEffect.h',
		'sound/SoundEngine.cpp',
		'sound/SoundEngine.h',
		'sound/SoundModel.cpp',
		'sound/SoundModel.h',

		'stores/DragProfile.cpp',
		'stores/DragProfile.h',
		'stores/Projectile.cpp',
		'stores/Projectile.h',
		'stores/Stores.cpp',
		'stores/Stores.h',
		'stores/StoresDatabase.cpp',
		'stores/StoresDatabase.h',
		'stores/StoresDefinition.cpp',
		'stores/StoresDefinition.h',
		'stores/StoresDynamics.h',
		'stores/StoresManagementSystem.cpp',
		'stores/StoresManagementSystem.h',

		'systems/AircraftFlightSensors.cpp',
		'systems/AircraftFlightSensors.h',
		'systems/AircraftInputSystem.cpp',
		'systems/AircraftInputSystem.h',
		'systems/AircraftSimpleFCS.cpp',
		'systems/AircraftSimpleFCS.h',

		'theater/CustomLayoutModel.cpp',
		'theater/CustomLayoutModel.h',
		'theater/ElevationCorrection.cpp',
		'theater/ElevationCorrection.h',
		'theater/Feature.cpp',
		'theater/Feature.h',
		'theater/FeatureGroup.cpp',
		'theater/FeatureGroup.h',
		'theater/FeatureGroupList.cpp',
		'theater/FeatureGroupList.h',
		'theater/FeatureGroupModel.cpp',
		'theater/FeatureGroupModel.h',
		'theater/FeatureLayout.cpp',
		'theater/FeatureLayout.h',
		'theater/FeatureModel.cpp',
		'theater/FeatureModel.h',
		'theater/FeatureObjectModel.cpp',
		'theater/FeatureObjectModel.h',
		'theater/FeatureQuad.cpp',
		'theater/FeatureQuad.h',
		'theater/FeatureSceneGroup.h',
		'theater/FeatureSceneModel.cpp',
		'theater/FeatureSceneModel.h',
		'theater/IsoContour.cpp',
		'theater/IsoContour.h',
		'theater/LayoutTransform.cpp',
		'theater/LayoutTransform.h',
		'theater/Objective.cpp',
		'theater/Objective.h',
		'theater/RandomBillboardModel.cpp',
		'theater/RandomBillboardModel.h',
		'theater/RandomForestModel.cpp',
		'theater/RandomForestModel.h',

		'views/CameraAgent.cpp',
		'views/CameraAgent.h',
		'views/CameraCommand.h',
		'views/CameraKinematics.cpp',
		'views/CameraKinematics.h',
		'views/ExternalViews.cpp',
		'views/ExternalViews.h',
		'views/InternalView.cpp',
		'views/InternalView.h',
		'views/View.cpp',
		'views/View.h',
		
		'wf/Button.cpp',
		'wf/Button.h',
		'wf/Check.cpp',
		'wf/Check.h',
		'wf/CheckBox.cpp',
		'wf/CheckBox.h',
		'wf/Container.cpp',
		'wf/Container.h',
		'wf/Control.cpp',
		'wf/Control.h',
		'wf/ControlCallback.cpp',
		'wf/ControlCallback.h',
		'wf/ControlGeometryBuilder.cpp',
		'wf/ControlGeometryBuilder.h',
		'wf/Image.cpp',
		'wf/Image.h',
		'wf/InputInterfaceManager.cpp',
		'wf/InputInterfaceManager.h',
		'wf/Label.cpp',
		'wf/Label.h',
		'wf/ListBox.cpp',
		'wf/ListBox.h',
		'wf/ListBoxItem.cpp',
		'wf/ListBoxItem.h',
		'wf/Model.cpp',
		'wf/Model.h',
		'wf/MultiControlContainer.cpp',
		'wf/MultiControlContainer.h',
		'wf/ResourceLocator.cpp',
		'wf/ResourceLocator.h',
		'wf/Serialization.cpp',
		'wf/Serialization.h',
		'wf/Signal.cpp',
		'wf/Signal.h',
		'wf/SignalData.cpp',
		'wf/SignalData.h',
		'wf/SingleControlContainer.cpp',
		'wf/SingleControlContainer.h',
		'wf/Slot.cpp',
		'wf/Slot.h',
		'wf/StringResourceManager.cpp',
		'wf/StringResourceManager.h',
		'wf/Style.h',
		'wf/StyleBuilder.cpp',
		'wf/StyleBuilder.h',
		'wf/Tab.cpp',
		'wf/Tab.h',
		'wf/TableControlContainer.cpp',
		'wf/TableControlContainer.h',
		'wf/Window.cpp',
		'wf/Window.h',
		'wf/WindowManager.cpp',
		'wf/WindowManager.h',
	],
	deps = ['csplib', 'opengl', 'osg', 'sdl', 'sound'])


build.SharedLibrary(expenv,
	name = 'cspsim',
	sources = [
		'@cspsim',
		'@cspsim/battlefield',
		'@cspsim/config',
		'@cspsim/sky',
	],
	aliases = ['all', 'cspsim'],
	doxygen = 'cspsim.dox',
	softlink = 1)


build.SharedLibrary(env,
	name = 'cspsim_module',
	sources = ['cspsim.i'],
	deps = ['cspsim'],
	aliases = ['all', 'cspsim'],
	doxygen = 'cspsim.dox',
	SHLIBPREFIX = '_')


build.SharedLibrary(expenv,
	name = 'indexserver',
	sources = [
		'indexserver.i',
		'IndexServer.h',
		'IndexServer.cpp',
		'@cspsim/battlefield',
		'@cspsim/config',
	],
	deps = ['csplib', 'sdl'],
	aliases = 'all',
	SHLIBPREFIX = '_')

build.Program(env,
	name = 'skydemo',
	sources = [
		'@cspsim/sky',
		'sky/Test.cpp',
	],
	deps = ['csplib', 'osg'],
	aliases = 'skydemo')

build.Test(env,
	name = 'test_PhysicsModel',
	sources = [ 'test/test_PhysicsModel.cpp' ],
	deps = ['cspsim'])

