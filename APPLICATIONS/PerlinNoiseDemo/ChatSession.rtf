{\rtf1\ansi\deff0\deftab720
{\fonttbl{\f0\fdontcare MS Sans Serif;}{\f1\fdontcare\fcharset1 MS Sans Serif;}{\f2\fswiss\fprq34 MS Sans Serif;}}
{\colortbl\red0\green0\blue0;}
\deflang1033\pard \plain \cf0 \fs24 
\par Chat Participants: storm_bringer@gmx.li ,delta
\par 
\par <storm_bringer@gmx.li> \fs24 i hope so :-)
\par 
\f1 \fs24 <delta> \fs24 ok, there?
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 not really. it's 23:10
\par 
\f1 \fs24 <delta> \fs24 Local rtime is 14:09?
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 		nf = Noize->Noise((float)x/32, (float)y/32, z);
\par 
\fs24 <storm_bringer@gmx.li> \fs24 		nf = nf + Noize->Noise((float)x/16, (float)y/16, z)/2;
\par 
\fs24 <storm_bringer@gmx.li> \fs24 		nf = nf + Noize->Noise((float)x/8, (float)y/8, z)/4;
\par 
\fs24 <storm_bringer@gmx.li> \fs24 		nf = nf + Noize->Noise((float)x/4, (float)y/4, z)/8;
\par 
\fs24 <storm_bringer@gmx.li> \fs24 each point of the noise text\fs16 ure is calculated via the above functions. how do
 i have to modify them to make it tile?
\par 
\f1 \fs24 <delta> \fs24 ok. Do u want to talk about something on the main noise function?
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 do yu have the demo running?
\par 
\fs24 <storm_bringer@gmx.li> \fs24 yes
\par 
\f1 \fs24 <delta> \fs24 hmmm, could u explain me what is z here? z is an altitude?
\par 
\fs24 <delta> \fs24 ok.
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 i'll send it to u
\par 
\f1 \fs24 <delta> \fs24 no demo, where is it? your demo?
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 do you get anything?
\par 
\f1 \fs24 <delta> \fs24 Hope I can get it. Maybe I have to disable my firewall (I m on xp pro here).
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 don't work...
\par 
\fs24 <storm_bringer@gmx.li> \fs24 give me your mail please!
\par 
\f1 \fs24 <delta> \fs24 establishing connection ...
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 it's up
\par 
\f1 \fs24 <delta> \fs24 singularcusp@yahoo.fr
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 get it
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 I have to reinstall SDL.
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 you only need the dll. should be there in 30 secs
\par 
\fs24 <storm_bringer@gmx.li> \fs24 nice to hear that :-)
\par 
\fs24 <storm_bringer@gmx.li> \fs24 z is added 0.1 each cycle
\par 
\f1 \fs24 <delta> \fs24 k\fs28  it is working.\f2 
\par 
\f1 \fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 I don t get w\fs24 hat is nf, nor why u divide by 32 or 16, ...
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 nf is the result of the noise function
\par 
\fs24 <storm_bringer@gmx.li> \fs24 it comes more from perlin's own paper...
\par 
\fs24 <storm_bringer@gmx.li> \fs24 wait a minute...
\par 
\f1 \fs24 <delta> \fs24 yes I understand but from what it s coming from? in the paper I mean?
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 i can't find the link to perlin now
\par 
\fs24 <storm_bringer@gmx.li> \fs24 zucker describes what i need, but i don't know how to make code out of it (la
st paragraph)
\par 
\f1 \fs24 <delta> \fs24 ok, I didn t read it yet. I have just read Zucker. It is not sufficient for what u r interes
ted in?
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 not ure I have well understood but if u have a noise function defined on a 2d or 3d domain, 
u just take some sort of quadratic or cubic combination.
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 could u repeat that a bit less mathematically???
\par 
\f1 \fs24 <delta> \fs24 Assume u have a 3d domain, is it the case?
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 when u deal with 1d space, like a line, say, a straight line, to make a looping noise (see p
age 6 from Zucker), u make in fact a convex combination. It just mean u have 2 extrem point on a segm
ent and u paramterize the segment.
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 Zucker write that:
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 F'(z) = z/t * F(z-t) + (1 - z/t) * F(z)
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 i'm still here...
\par 
\f1 \fs24 <delta> \fs24 To deal with 2d psace, u have to add a new variable to this formula (quadratic combination) 
and for 3d space u have in fact 3 variables (cubic combination).
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 In fact I didn t unerstand the very last sentence when he said that u need 8 calls to noise 
function ... I m wondering if he doesn t mean for a 3d dimensional space.
\par 
\fs24 <delta> \fs24 This should give: 2 calls for a 1d space, 4 calls for a 2d space, 8 for a 3d space which sou
nds coherent.
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 Is it ok?
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 hard to say... i think i know what it means now. but i'm still not sure how t
o put this into c++ code
\par 
\f1 \fs24 <delta> \fs24 ok, suppose your noise function is 
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 float nf(float x, float y, float z);
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 it is.
\par 
\f1 \fs24 <delta> \fs24 ok?
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 So it is in fact defined on your entire 3d domain. U r looking to make tiling noise. So u ha
ve to first decide about a cube here (or parallelotop if is not a cube).
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 ok.
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 let's keep to 2d, 3d is not necessary
\par 
\f1 \fs24 <delta> \fs24 So, u have a square with w units in the x direction and h units in the y direction. What am 
I understanding? w, and h may be integer or float. 
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 let's say they're int, just x/y pairs on a texture
\par 
\f1 \fs24 <delta> \fs24 this square contains some "initial square" from your initila grid. 
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 Now, take a point in your 2d domain: (x,y).
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 It seems to me that u have first to translate it into [0,w]x[O,h]. u may do something like t
hat:
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 xnormalized = x - floor(x/(w*deltax)) * deltax 
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 sounds good...+
\par 
\f1 \fs24 <delta> \fs24 where deltax is the size of an initial grid square. ok?
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 same for ynormalized. 
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 What r xnormalized and ynormalized. Just, the corresponding point in the initial normalized 
first square with w unit large, and h units height.
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 Now, u may write your tile noise function:
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 F_tileable(x,y) = the formula he gives where F stands for your nf. And (x,y) in the right me
mber of the equality must be changed by xnormalized and ynormalized.
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 Also, if w is an integer (it is the number of units in the x direction for your tile), u hav
e to replave w by w * deltax. Same for h.
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 F_tileable(x,y) = ( nf(xnormalized, ynormalized) * (wx - xnormalized) * (hy - ynormalized) +
 ... ) / ( wx * hy);
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 where wx = w * deltax and hy = h * deltay.
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 Might u try it?
\par 
\fs24 <delta> \fs24 
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 SURE!
\par 
\f1 \fs24 <delta> \fs24 (still alive?)
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 you don't know c++?
\par 
\f1 \fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 okay, i'll try to implement that stuff. i'm sure it won't work, then you coul
d have another look at it :-)
\par 
\f1 \fs24 <delta> \fs24 I can t rememver if u have to use floor or ceil but u get the idea. just a bit ;-) 
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 my coding skills!!!
\par 
\f1 \fs24 <delta> \fs24 hehe ok, which point u r doubting?
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 oh, thanx :-)
\par 
\f1 \fs24 <delta> \fs24 skills ? i m in confidence.
\par 
\fs24 <delta> \fs24 
\par 
\f0 \fs24 <storm_bringer@gmx.li> \fs24 well, i actually only ported someone else's code to c++. the other guy used b
oth articles. i'll see if i can find the link to perlin's paper about it.
\par 
\fs24 <storm_bringer@gmx.li> \fs24 cu!
\par 

\par End Chat Session
\par };{\rtf1\ansi\deff0\deftab720
{\fonttbl{\f0\fdontcare MS Sans Serif;}}
{\colortbl\red0\green0\blue0;}
\deflang1033\pard \plain \cf0 \fs16 
\par End Chat Session
\par };{\rtf1\ansi\deff0\deftab720
{\fonttbl{\f0\fdontcare\fcharset1 MS Sans Serif;}{\f1\fswiss\fprq34 MS Sans Serif;}}
{\colortbl\red0\green0\blue0;}
\deflang1033\pard \plain \cf0 \fs24 
\par Chat Participants: storm_bringer@gmx.li ,delta
\par 
\par say me how it is working :-) bad, for sure but probably I haven t well understood what he means. Whic
h paper r u using for your noise function. Zucker or perlin?\f1 \fs24 
\par End Chat Session
\par };