# -*-python-*-
#
# Copyright 2004-2005 Mark Rose <mkrose@users.sourceforge.net>
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA

Import('env build')

env = env.Copy()
env.AppendUnique(CPPDEFINES=Split('TERRAIN_EXPORTS'))

build.SharedLibrary(env,
	name = 'demeter',
	sources = [
		'DemeterDrawable.cpp',
		'DemeterTerrain.cpp',
		'Terrain.cpp',
		'TerrainTextureFactory.cpp',
	],
	deps = ['cspsim'],
	alias = 'all')


'''
class PlatformSettings:
	def config_win(self, env):
		env.AppendUnique(LIBS=[
			'csplib',
			'cspsim',
			'glu32',
			'opengl32',
			'OpenThreadsWin32',
			'osg',
			'SDL',
			'SDL_image'])
		env.AppendUnique(LIBPATH=[
			'#/csplib/.bin',
			'#/cspsim/.bin'])

	def config_default(self, env):
		print ':: csp.modules.demeter config'
		conf = build.CustomConfigure(env)
		valid = 1
		valid = conf.CheckCommandVersion('sdl', 'sdl-config --version', '1.2.5') and valid
		valid = conf.CheckLib('SDL_image', 'IMG_Load') and valid
		if not valid:
			print 'Missing dependencies; see http://csp.sf.net/wiki/Current_build_dependencies for more information.'
			Exit(1)
		env = conf.Finish()
		env.ParseConfig('sdl-config --cflags --libs')


env = env.Copy()
env.Append(CPPDEFINES=Split('TERRAIN_EXPORTS'))
env.CustomizeForPlatform(PlatformSettings)


SOURCES = [
	'DemeterDrawable.cpp',
	'DemeterTerrain.cpp',
	'Terrain.cpp',
	'TerrainTextureFactory.cpp',
]

libdemeter = env.SharedLibrary('demeter', SOURCES)
Alias(['all', 'demeter'], [libdemeter])
'''
